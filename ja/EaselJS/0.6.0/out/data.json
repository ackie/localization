{
    "project": {},
    "files": {
        "src/easeljs/display/Bitmap.js": {
            "name": "src/easeljs/display/Bitmap.js",
            "modules": {},
            "classes": {
                "Bitmap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/BitmapAnimation.js": {
            "name": "src/easeljs/display/BitmapAnimation.js",
            "modules": {},
            "classes": {
                "BitmapAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/Container.js": {
            "name": "src/easeljs/display/Container.js",
            "modules": {},
            "classes": {
                "Container": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/DOMElement.js": {
            "name": "src/easeljs/display/DOMElement.js",
            "modules": {},
            "classes": {
                "DOMElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/DisplayObject.js": {
            "name": "src/easeljs/display/DisplayObject.js",
            "modules": {
                "EaselJS": 1
            },
            "classes": {
                "DisplayObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/Graphics.js": {
            "name": "src/easeljs/display/Graphics.js",
            "modules": {},
            "classes": {
                "Command": 1,
                "Graphics": 1
            },
            "fors": {
                "Graphics": 1
            },
            "namespaces": {}
        },
        "src/easeljs/display/MovieClip.js": {
            "name": "src/easeljs/display/MovieClip.js",
            "modules": {},
            "classes": {
                "MovieClip": 1,
                "MovieClipPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/Shadow.js": {
            "name": "src/easeljs/display/Shadow.js",
            "modules": {},
            "classes": {
                "Shadow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/Shape.js": {
            "name": "src/easeljs/display/Shape.js",
            "modules": {},
            "classes": {
                "Shape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/SpriteSheet.js": {
            "name": "src/easeljs/display/SpriteSheet.js",
            "modules": {},
            "classes": {
                "SpriteSheet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/Stage.js": {
            "name": "src/easeljs/display/Stage.js",
            "modules": {},
            "classes": {
                "Stage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/display/Text.js": {
            "name": "src/easeljs/display/Text.js",
            "modules": {},
            "classes": {
                "Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/events/EventDispatcher.js": {
            "name": "src/easeljs/events/EventDispatcher.js",
            "modules": {},
            "classes": {
                "EventDispatcher": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/events/MouseEvent.js": {
            "name": "src/easeljs/events/MouseEvent.js",
            "modules": {},
            "classes": {
                "MouseEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/filters/AlphaMapFilter.js": {
            "name": "src/easeljs/filters/AlphaMapFilter.js",
            "modules": {},
            "classes": {
                "AlphaMapFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/filters/AlphaMaskFilter.js": {
            "name": "src/easeljs/filters/AlphaMaskFilter.js",
            "modules": {},
            "classes": {
                "AlphaMaskFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/filters/BoxBlurFilter.js": {
            "name": "src/easeljs/filters/BoxBlurFilter.js",
            "modules": {},
            "classes": {
                "BoxBlurFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/filters/ColorFilter.js": {
            "name": "src/easeljs/filters/ColorFilter.js",
            "modules": {},
            "classes": {
                "ColorFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/filters/ColorMatrix.js": {
            "name": "src/easeljs/filters/ColorMatrix.js",
            "modules": {},
            "classes": {
                "ColorMatrix": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/filters/ColorMatrixFilter.js": {
            "name": "src/easeljs/filters/ColorMatrixFilter.js",
            "modules": {},
            "classes": {
                "ColorMatrixFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/filters/Filter.js": {
            "name": "src/easeljs/filters/Filter.js",
            "modules": {},
            "classes": {
                "Filter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/geom/Matrix2D.js": {
            "name": "src/easeljs/geom/Matrix2D.js",
            "modules": {},
            "classes": {
                "Matrix2D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/geom/Point.js": {
            "name": "src/easeljs/geom/Point.js",
            "modules": {},
            "classes": {
                "Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/geom/Rectangle.js": {
            "name": "src/easeljs/geom/Rectangle.js",
            "modules": {},
            "classes": {
                "Rectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/ui/ButtonHelper.js": {
            "name": "src/easeljs/ui/ButtonHelper.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/ui/Touch.js": {
            "name": "src/easeljs/ui/Touch.js",
            "modules": {},
            "classes": {
                "Touch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/utils/Log.js": {
            "name": "src/easeljs/utils/Log.js",
            "modules": {},
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/utils/SpriteSheetBuilder.js": {
            "name": "src/easeljs/utils/SpriteSheetBuilder.js",
            "modules": {},
            "classes": {
                "SpriteSheetBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/utils/SpriteSheetUtils.js": {
            "name": "src/easeljs/utils/SpriteSheetUtils.js",
            "modules": {},
            "classes": {
                "SpriteSheetUtils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/utils/Ticker.js": {
            "name": "src/easeljs/utils/Ticker.js",
            "modules": {},
            "classes": {
                "Ticker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/easeljs/utils/UID.js": {
            "name": "src/easeljs/utils/UID.js",
            "modules": {},
            "classes": {
                "UID": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "EaselJS": {
            "name": "EaselJS",
            "submodules": {},
            "classes": {
                "Bitmap": 1,
                "BitmapAnimation": 1,
                "Container": 1,
                "DOMElement": 1,
                "DisplayObject": 1,
                "Command": 1,
                "Graphics": 1,
                "MovieClip": 1,
                "MovieClipPlugin": 1,
                "Shadow": 1,
                "Shape": 1,
                "SpriteSheet": 1,
                "Stage": 1,
                "Text": 1,
                "EventDispatcher": 1,
                "MouseEvent": 1,
                "AlphaMapFilter": 1,
                "AlphaMaskFilter": 1,
                "BoxBlurFilter": 1,
                "ColorFilter": 1,
                "ColorMatrix": 1,
                "ColorMatrixFilter": 1,
                "Filter": 1,
                "Matrix2D": 1,
                "Point": 1,
                "Rectangle": 1,
                "Touch": 1,
                "Log": 1,
                "SpriteSheetBuilder": 1,
                "SpriteSheetUtils": 1,
                "Ticker": 1,
                "UID": 1
            },
            "fors": {
                "Graphics": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/easeljs/utils/UID.js",
            "line": 34,
            "description": "EaselJSはcanvas向けに保持されたグラフィックスモードを提供するJavascriptライブラリであり、完全な階層構造の表示リスト、\nコアインタラクションモデル、canvasでの2Dグラフィックスを簡易にするヘルパークラスを含みます。\nEaselJSはリッチなHTML5Canvasにおけるリッチなグラフィックスやインタラクションに役立つソリューションを提供します。\n\n<h4>はじめに</h4>\nEaselをはじめるために、まずはCANVAS要素を覆う{{#crossLink \"Stage\"}}{{/crossLink}}を作成し、{{#crossLink \"DisplayObject\"}}{{/crossLink}}\nインスタンスを子として加えてみましょう。\nEaselJSは以下をサポートしています:\n<ul>\n     <li>{{#crossLink \"Bitmap\"}}{{/crossLink}}による画像表示</li>\n     <li>{{#crossLink \"Shape\"}}{{/crossLink}}と{{#crossLink \"Graphics\"}}{{/crossLink}}によるベクターグラフィックス</li>\n     <li>{{#crossLink \"SpriteSheet\"}}{{/crossLink}}と{{#crossLink \"BitmapAnimation\"}}{{/crossLink}}によるビットマップアニメーション\n     <li>{{#crossLink \"Text\"}}{{/crossLink}}によるシンプルなテキスト</li>\n     <li>{{#crossLink \"Container\"}}{{/crossLink}}による他のDisplayObjectを格納するコンテナ</li>\n     <li>{{#crossLink \"DOMElement\"}}{{/crossLink}}によるHTML DOM要素の制御</li>\n</ul>\n\n全ての表示オブジェクトはステージに子として加えるか、canvasに直接描画できます。\n\n<b>ユーザインタラクション</b><br />\n全てのステージ上（DOMElementを除く）の表示オブジェクトはマウスあるいはタッチで操作したときにイベントを発行します。\nEaselJSは使いやすいドラッグアンドドロップモデルだけでなく、hover、press、それとreleaseイベントをサポートします。\n詳しくは{{#crossLink \"MouseEvent\"}}{{/crossLink}}を参照してください。\n\n<h4>簡単な例</h4>\nこの例ではEaselJSの描画APIを用いて{{#crossLink \"Stage\"}}{{/crossLink}}上に{{#crossLink \"Shape\"}}{{/crossLink}}を生成して配置する方法を説眼します。\n\n\t    //canvasへの参照を渡してステージを作成します。\n\t    stage = new createjs.Stage(\"demoCanvas\");\n\t    //Shape DisplayOBjectを生成します。\n\t    circle = new createjs.Shape();\n\t    circle.graphics.beginFill(\"red\").drawCircle(0, 0, 40);\n\t    //Shapeインスタンスの位置を設定します。\n\t    circle.x = circle.y = 50;\n\t    //表示リストにShapeインスタンスを加えます。\n\t    stage.addChild(circle);\n\t    //ステージの更新により次のフレームを描画します。\n\t    stage.update();\n\n<b>シンプルなアニメーションの例</b><br />\nこの例では、前のデモで作成したシェイプを画面上で動かします。\n\n\t    //ステージの更新により次のフレームを描画します。\n\t    createjs.Ticker.addEventListener(\"tick\", handleTick);\n\n\t    function handleTick() {\n         //円を右に10単位動かします。\n\t    \tcircle.x += 10;\n\t    \t//円を最初の位置に戻します。\n\t    \tif (circle.x > stage.canvas.width) { circle.x = 0; }\n\t    \tstage.update();\n\t    }\n\n<h4>他の特長</h4>\nEaselJSは以下をサポートするように構築されています。\n<ul><li>{{#crossLink \"Shadow\"}}{{/crossLink}}やCompositeOperationといったcanvasの特長</li>\n     <li>{{#crossLink \"Ticker\"}}{{/crossLink}}、オブジェクトが受け取ることのできるグローバルな鼓動</li>\n     <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}, {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}},\n     {{#crossLink \"AlphaMapFilter\"}}{{/crossLink}}, {{#crossLink \"BoxBlurFilter\"}}{{/crossLink}}といったフィルター。\n     詳しくは{{#crossLink \"Filter\"}}{{/crossLink}}を参照してください。</li>\n     <li>簡単にインタラクティブなボタンを作成するための{{#crossLink \"ButtonHelper\"}}{{/crossLink}}ユーティリティ。</li>\n     <li>実行時に{{#crossLink \"SpriteSheet\"}}{{/crossLink}}の機能を構築し管理するのを助ける\n     {{#crossLink \"SpriteSheetUtils\"}}{{/crossLink}}と{{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}。\n</ul>"
        }
    },
    "classes": {
        "Bitmap": {
            "name": "Bitmap",
            "shortname": "Bitmap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "file": "src/easeljs/display/Bitmap.js",
            "line": 34,
            "description": "Bitmapは表示リストにおいてImage, Canvas, あるいはVideoに相当します。\nBitmapは、既に存在するHTML要素、あるいはパス文字列を引数に与えてインスタンスを生成できます。\n\n<h4>例</h4>\n     var bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n\n注意: 引数に与えたファイルのパス文字列あるいはimageタグがまだ読み込まれていない場合、描画するためにstageを再描画する必要があるときがあります。",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageOrUri",
                    "description": "表示するソースオブジェクトあるいは画像のURI。\nImage, Canvas, Videoオブジェクト, あるいは画像ファイルのURL文字列のいずれかを使用できます。\n画像ファイルのURL文字列の場合は、新しくImageオブジェクトが生成され.imageプロパティに代入されます。",
                    "type": "Image | HTMLCanvasElement | HTMLVideoElement | String"
                }
            ]
        },
        "BitmapAnimation": {
            "name": "BitmapAnimation",
            "shortname": "BitmapAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 34,
            "description": "スプライトシート画像からフレームやフレームの順列（すなわちアニメーション）を表示します\nスプライトシートとは単一の画像（通常はアニメーションのフレーム）が結合された画像の集まりのことです。\n例えば、100×100の8枚の画像からなるアニメーションは2行4列の400×200のスプライトシートに結合できます。\nあなたは個々のフレームを表示することもできれば、アニメーションとしてフレームの順列を再生することもできますし、複数のアニメーションを順番に再生することもできます。\n\nより詳細なフレームとアニメーションの設定に関する情報は {{#crossLink \"SpriteSheet\"}}{{/crossLink}} クラスを見てください。\n\n<h4>例</h4>\n     var instance = new createjs.BitmapAnimation(spriteSheet);\n     instance.gotoAndStop(\"frameName\");",
            "extends": "DisplayObject",
            "uses": [
                "EventDispatcher"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "再生するスプライトシートインスタンスです。それはソース画像、フレーム面積、フレームデータの情報を含みます。\n詳しくは {{#crossLink \"SpriteSheet\"}}{{/crossLink}} を見てください。",
                    "type": "SpriteSheet"
                }
            ]
        },
        "Container": {
            "name": "Container",
            "shortname": "Container",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "file": "src/easeljs/display/Container.js",
            "line": 34,
            "description": "Containerは入れ子にできる表示リストであり、他の表示リストを格納することができます。\n例えば、腕、脚、胴体それと頭のインスタンスをPerson Containerとしてまとめることができ、個々の相対距離を保ったままグループとして変形することができます。\nContainerの子の <code>transform</code> プロパティと <code>alpha</code> プロパティは親のContainerと連結されたものとなります。\n\n例えば、<code>x=50</code>で<code>alpha=0.7</code>のContainerの中に置かれたx=100でalpha=0.5の{{#crossLink \"Shape\"}}{{/crossLink}}は、\nx=150とalpha=0.35としてcanvasに描画されます。\nContainerによりいくらかのオーバーヘッドができますので、一般的に一個だけの子を持つ用途のためにContainerを作るべきではありません。\n\n<h4>例</h4>\n     var container = new createjs.Container();\n     container.addChild(bitmapInstance, shapeInstance);\n     container.x = 100;",
            "extends": "DisplayObject",
            "is_constructor": 1
        },
        "DOMElement": {
            "name": "DOMElement",
            "shortname": "DOMElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "file": "src/easeljs/display/DOMElement.js",
            "line": 36,
            "description": "<b>このクラスはまだ実験的であり、より上級な使用ではバギーになることもあり得ます。バグを報告してください。</b>\n\nDOMElementは、ディスプレイリストによってHTMLElementを関連づけることを許します。それは、追加された\n{{#crossLink \"Container\"}}{{/crossLink}}の子であるかのように、DOM内で変換されます。しかしながら、\nそれはキャンバスに描画されていません、それ自体はキャンバスに相対的に持つz-indexが保持されます\n（つまり、キャンバスの前もしくは後ろに描画されます）。\n\nDOMElementの位置は、DOMでのそれらの親ノードに相対的です。DOMオブジェクトは、ページ上の同じ位置を共有するように\nキャンバスを含むdivに追加することをお勧めします。\n\nDOMElementは、キャンバスの境界の外側に表示したい、キャンバスの内容の上にHTMLエレメントを位置決めする\nために有用です。\n\n<h4>マウスインタラクション</h4>\n\nDOMElementインスタンスは、完全なEaselJSディスプレイオブジェクトではなく、EaselJSマウスイベントもしくはHitTest\nのようなメソッドのサポートに参加しません。DOMElementからマウスイベントを取得するには、htmlElementにハンドラを追加する\n必要があります（注：これはEventDispatcherをサポートしません）。\n\n     var domElement = new createjs.DOMElement(htmlElement);\n     domElement.htmlElement.onclick = function() {\n         console.log(\"clicked\");\n     }",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "htmlElement",
                    "description": "参照もしくは、管理するDOMエレメントのためのid。",
                    "type": "HTMLElement"
                }
            ]
        },
        "DisplayObject": {
            "name": "DisplayObject",
            "shortname": "DisplayObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 103,
            "description": "DisplayObjectは抽象オブジェクトであり、直接生成されるべきではありません。\nその代わりに、{{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}\nのような子クラスを生成してください。\nDisplayObjectはEaselJSライブラリにおいて全ての表示クラスの基底クラスです。\n全ての表示オブジェクトで共有される基本的なプロパティとメソッドを持ち、その中には変形系のプロパティ(x, y, scaleX, scaleY, など)、キャッシュ機構、マウスハンドラがあります。",
            "uses": [
                "EventDispatcher"
            ],
            "is_constructor": 1
        },
        "Command": {
            "name": "Command",
            "shortname": "Command",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/Graphics.js",
            "line": 34,
            "description": "Graphicsクラスで使用される内部クラスです。Graphics内の命令リストを作成するために使用されます。",
            "access": "protected",
            "tagname": "",
            "is_constructor": 1
        },
        "Graphics": {
            "name": "Graphics",
            "shortname": "Graphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/Graphics.js",
            "line": 53,
            "description": "Graphicsクラスは、ベクター描画命令を生成して指定したコンテクストに描画するための、容易に使用できるAPIを提供します。\n注意点として、Graphicsは{{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}を直接呼び出すことにより、Easelフレームワークに依存せず使用することができますし、\n{{#crossLink \"Shape\"}}{{/crossLink}}オブジェクトを使用してEaselの表示オブジェクトのコンテクスト内でベクターグラフィックスを描画することも可能です。\n\n<h4>Example</h4>\n     var g = new Graphics();\n\t    g.setStrokeStyle(1);\n\t    g.beginStroke(Graphics.getRGB(0,0,0));\n\t    g.beginFill(Graphics.getRGB(255,0,0));\n\t    g.drawCircle(0,0,3);\n\n\t    var s = new Shape(g);\n\t    \ts.x = 100;\n\t    \ts.y = 100;\n\n\t    stage.addChild(s);\n\t    stage.update();\n\n注意点として、Graphicsの全ての描画メソッドはGraphicsインスタンスを返すので、お互いに連鎖させることができます。\n例えば下のコードは赤い線、青の塗りつぶしの矩形を描画する命令を生成した後、指定したcontext2Dに表示しています:\n\n     myGraphics.beginStroke(\"#F00\").beginFill(\"#00F\").drawRect(20, 20, 100, 50).draw(myContext2D);\n\n<h4>短縮版 API</h4>\nGraphicsクラスはまた\"短縮版 API\"を含んでおり、これはGraphicsの全てのメソッドへのショートカットである1または2文字のメソッド群です。\nこれらのメソッドはコンパクトな命令を作成するために重要で、Toolkit for CreateJSで可読性のあるコードを生成するために使用されます。\n全ての短縮版メソッドはprotectedとして記述されているため、ドキュメント中ではprotectedについての説明を有効にすることで閲覧することができます。\n\n<table>\n    <tr><td><b>Tiny</b></td><td><b>メソッド</b></td><td><b>短縮版</b></td><td><b>Method</b></td></tr>\n    <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n    <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n    <tr><td>at</td><td>{{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n    <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n    <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n    <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n    <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n    <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n    <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n    <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n    <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n    <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n    <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n    <td>ss</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} </td></tr>\n    <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n    <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n    <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n    <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n    <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n    <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n    <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n    <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n    <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n    <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n    <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n    <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n</table>\n\nここでは上記の実例として, 短縮版APIを代用しています。\n\n     myGraphics.s(\"#F00\").f(\"#00F\").r(20, 20, 100, 50).draw(myContext2D);",
            "is_constructor": 1
        },
        "MovieClip": {
            "name": "MovieClip",
            "shortname": "MovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/MovieClip.js",
            "line": 34,
            "description": "MovieClipクラスはEaselJS {{#crossLink \"Container\"}}{{/crossLink}}と共にTweenJSタイムラインと連携します。\nそれは、タイムラインアニメーション、状態の変更や同期されたアクションをカプセル化するオブジェクトを生成することが\nできるようにします。正しくムービークリップを設定する際の固有の複雑さのために、それは主に出力のために意図され、\nメインEaselJSライブラリには含まれません。\n\nいくつかの譲歩は将来的に時間ベースのタイムラインをサポートするために行われてきたけれども、tickベースであれば（時間\nベースでなく）現在のMovieClipにのみ正しく動作します。",
            "mainName": "MovieClip",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mode",
                    "description": "modeプロパティの初期値。MovieClip.INDEPENDENT, MovieClip.SINGLE_FRAME, or MovieClip.SYNCHEDのうちの一つ。",
                    "type": "String"
                },
                {
                    "name": "startPosition",
                    "description": "startPositionプロパティの初期値。",
                    "type": "Number"
                },
                {
                    "name": "loop",
                    "description": "loopプロパティの初期値。",
                    "type": "Boolean"
                },
                {
                    "name": "labels",
                    "description": "このMovieClipに関連するタイムラインインスタンスに渡すラベルのハッシュ",
                    "type": "Object"
                }
            ]
        },
        "MovieClipPlugin": {
            "name": "MovieClipPlugin",
            "shortname": "MovieClipPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/MovieClip.js",
            "line": 439,
            "description": "このプラグインは、トゥイーンのstartPositionプロパティを防ぐため、<a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a>で動作します。",
            "access": "private",
            "tagname": "",
            "is_constructor": 1
        },
        "Shadow": {
            "name": "Shadow",
            "shortname": "Shadow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/Shadow.js",
            "line": 34,
            "description": "本クラスは{{#crossLink \"DisplayObject\"}}{{/crossLink}}に適用させる影を定義するのに必要なその<code>shadow</code>プロパティをカプセル化します\n\n<h4>例</h4>\n     myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "color",
                    "description": "影の色",
                    "type": "String"
                },
                {
                    "name": "offsetX",
                    "description": "ピクセル単位でX軸に対する影のオフセット",
                    "type": "Number"
                },
                {
                    "name": "offsetY",
                    "description": "ピクセル単位でY軸に対する影のオフセット",
                    "type": "Number"
                },
                {
                    "name": "blur",
                    "description": "ブラー効果のサイズ",
                    "type": "Number"
                }
            ]
        },
        "Shape": {
            "name": "Shape",
            "shortname": "Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/Shape.js",
            "line": 34,
            "description": "Shapeは、ディスプレイリストにおいてベクターアートを表示することを可能にします。それは、すべてのベクター描画メソッドを\n公開する {{#crossLink \"Graphics\"}}{{/crossLink}} インタフェースを構成します。グラフィックインタフェースは、複数の\nShape間で同じベクターグラフィックスを異なった位置もしくは変形で表示するために共有が可能です。\n\nベクターアートが描画間で変更されないなら、レンダリングコストを削減するために {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} \nメソッドを使いたいと思うかも知れません。\n\n<h4>例</h4>\n     var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n     var shape = new createjs.Shape(graphics);\n     \n     //あるいは、上と同じ描画のためにShapeクラスのグラフィックスプロパティを使うこともできます。\n     var shape = new createjs.Shape();\n     shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "graphics",
                    "description": "オプション。表示のためのグラフィックスインタフェース。nullなら、新しいグラフィックスインタフェースが作成されます。",
                    "type": "Graphics"
                }
            ]
        },
        "SpriteSheet": {
            "name": "SpriteSheet",
            "shortname": "SpriteSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 33,
            "description": "スプライトシートに関連するプロパティやメソッドをカプセル化します。スプライトシートは、より大きいイメージ（あるいは\n複数のイメージ）に合成された一連のイメージです（たいていはアニメーションフレーム）。たとえば、８個の100x100のイメージ\nで構成されるアニメーションは、単一の400x200のスプライトシート（２段にまたがった４フレーム）に合成されます。\n\nスプライトシートコンストラクタに渡されるデータは、３つの重要な情報を定義します:<ol>\n   <li> 使用する単一のイメージもしくは複数イメージ。</li>\n   <li> 個々のイメージフレームの位置。このデータは、２つの方法のうち１つで表現されます:\n   規則的なグリッドの並びで同じ大きさのフレームとして、もしくは不規則に（不連続に）並べられた個々に定義され可変サイズの\n   フレームとして。</li>\n   <li> 同じく、アニメーションは２つの方法で表現されます: 開始と終了フレーム [0,3]と定義される一連の連続するフレームとして、\n   あるいは、フレームのリスト [0,1,2,3]として。</li>\n</OL>\n\n<h4>スプライトシートの書式</h4>\n\n     data = {\n\n         // イメージの定義:\n         // 使用するイメージもしくはイメージURIのリスト。スプライトシートはあらかじめロードして扱うことができます。\n         // その順序は、それらのフレーム定義のインデックス値を決定づけます。\n         images: [image1, \"path/to/image2.png\"],\n\n         // フレームの定義:\n\t        // フレームを定義するシンプルな方法は、フレームが連続しているのでフレームサイズのみを要求します:\n\t        // フレームのwidth/heightを定義してください。そして、任意にフレームカウントと登録座標のx/yを定義してください。\n\t        // カウントが除外された場合は、イメージの寸法に基づいて自動的に計算されます。\n\t        frames: {width:64, height:64, count:20, regX: 32, regY:64},\n\n\t        // もしくは、フレームの個々の矩形を定義する複雑な方法です。\n\t        // ５番目の値は、\"images\"で定義されたリストごとのイメージインデックスです（ディフォルトは0）。\n\t        frames: [\n\t        \t// x, y, width, height, imageIndex, regX, regY\n\t        \t[0,0,64,64,0,32,64],\n\t        \t[64,0,96,64,0]\n\t        ],\n\n         // アニメーションの定義:\n\n\t        // シンプルなアニメーションの定義。フレームの連続した範囲を定義してください。\n\t        // 順序づけるために\"次の\"アニメーションの名前もオプションとして定義してください。\n\t        // 次にfalseをセットすると、終わりに到達したときに、ポーズとなります。\n\t        animations: {\n\t        \t// start, end, next, frequency\n\t        \trun: [0,8],\n\t        \tjump: [9,12,\"run\",2],\n\t        \tstand: 13\n\t        }\n\n         // アニメーション内でインデックスによってフレームごとに指定する複雑なアプローチ。\n         animations: {\n         \trun: {\n         \t\tframes: [1,2,3,3,2,1]\n         \t},\n         \tjump: {\n         \t\tframes: [1,4,5,6,1],\n         \t\tnext: \"run\",\n         \t\tfrequency: 2\n         \t},\n         \tstand: { frames: [7] }\n         }\n\n\t        // 上の２つのアプローチは組み合わせることができます。単一のフレーム定義を使うこともできます:\n\t        animations: {\n\t        \trun: [0,8,true,2],\n\t        \tjump: {\n\t        \t\tframes: [8,9,10,9,8],\n\t        \t\tnext: \"run\",\n\t        \t\tfrequency: 2\n\t        \t},\n\t        \tstand: 7\n\t        }\n     }\n\n<h4>例</h4>\n２つのアニメーション フレーム0-4でループする\"run\"とフレーム5-8から再生する\"jump\"と共に規則的な50x50のグリッドに\n配置された単一のイメージ \"sprites.jpg\"を持つシンプルなスプライトシートを定義するためには:\n\n     var data = {\n         images: [\"sprites.jpg\"],\n         frames: {width:50, height:50},\n         animations: {run:[0,4], jump:[5,8,\"run\"]}\n     };\n     var animation = new createjs.BitmapAnimation(data);\n     animation.gotoAndPlay(\"run\");",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "uses": [
                "EventDispatcher"
            ]
        },
        "Stage": {
            "name": "Stage",
            "shortname": "Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/Stage.js",
            "line": 34,
            "description": "ステージは、ディスプレイリストのためのルートレベル {{#crossLink \"Container\"}}{{/crossLink}} です。その {{#crossLink \"Stage/tick\"}}{{/crossLink}} \nメソッドが呼ばれるたびに、そのターゲットキャンバスにそのディスプレイリストを描画します。\n\n<h4>例</h4>\nこの例はステージを作成し、それに子を追加します。そのとき子を更新し、{{#crossLink \"Stage/update\"}}{{/crossLink}} を使って\nステージを再描画するために {{#crossLink \"Ticker\"}}{{/crossLink}} を使います。\n\n     var stage = new createjs.Stage(\"canvasElementId\");\n     var image = new createjs.Bitmap(\"imagePath.png\");\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         bitmap.x += 10;\n         stage.update();\n     }",
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvas",
                    "description": "ステージが描画するキャンバスオブジェクト、もしくは現在のドキュメントに\nおけるキャンバスオブジェクトの文字列id。",
                    "type": "HTMLCanvasElement | String | Object"
                }
            ]
        },
        "Text": {
            "name": "Text",
            "shortname": "Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/display/Text.js",
            "line": 34,
            "description": "ディスプレイリストに１行もしくはそれ以上の行のダイナミックテキスト（ユーザ編集不可）を表示します。行ラップサポート\n（lineWidthを使用して）は、非常に基本的で、スペースもしくはタブのみでラップします。Textの代替として、キャンバスの\n上もしくは下に、{{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} もしくは、{{#crossLink \"DOMElement\"}}{{/crossLink}}\nを使って相対的に、HTMLテキストを置くこともできます。\n\n<b>Textは、HTMLテキストをサポートしていないことに注意してください。そして、一度に１つのフォントしか表示できません。</b>\n複数フォントのスタイルを使うためには、複数のテキストインスタンスを作成し、それらをマニュアルで位置付ける必要があります。\n\n<h4>例</h4>\n     var text = new createjs.Text(\"Hello World\", \"20px Arial\", #ff7700\");\n     text.x = 100;\n     text.textBaseline = \"alphabetic\";\n\nCreateJSのTextは、WEBフォント（キャンバスと同じルール）をサポートしています。フォントは、それが表示される前に\nロードされ、ブラウザによってサポートされていなければいけません。",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "text",
                    "description": "表示するテキスト。",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "font",
                    "description": "使用するフォントスタイル。CSSのfont属性で有効な値が指定できます（例. \"bold 36px Arial\"）。",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "color",
                    "description": "テキストに描画する色。 CSSの color属性で有効な値が指定できます（例. \"#F00\", \"red\", or \"#FF0000\")。",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "EventDispatcher": {
            "name": "EventDispatcher",
            "shortname": "EventDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "BitmapAnimation",
                "DisplayObject",
                "SpriteSheet",
                "MouseEvent",
                "SpriteSheetBuilder",
                "Ticker"
            ],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 34,
            "description": "EventDispatcher は、優先順位の付いたイベントリスナのキューの管理とイベントを発行するメソッドを提供します。全ての\n{{#crossLink \"DisplayObject\"}}{{/crossLink}} クラスはイベントを発行します。{{#crossLink \"Ticker\"}}{{/crossLink}} 等のいくつかのユーティリティも同様です。\n\nこのクラスを拡張することもできますし、EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} メソッドを使って、既存の prototype やインスタンスに\nこのクラスのメソッドを追加することもできます。\n\n<h4>例</h4>\nEventDispatcher の機能を \"MyClass\" クラスに追加します。\n\n     EventDispatcher.initialize(MyClass.prototype);\n\nイベントを 1 つ追加します。 ({{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}} を参照)\n\n     instance.addEventListener(\"eventName\", handlerMethod);\n     function handlerMethod(event) {\n         console.log(event.target + \" がクリックされました\");\n     }\n\n<b>適切なスコープの管理</b><br />\nEventDispatcher をクラス内で使用する場合、<code>Function.bind</code> やその他の方法を使用してメソッドのスコープを\n保持したい場合があるかもしれません。Function.bind はいくつかの古いブラウザーではサポートされない点に注意して下さい。\n\n     instance.addEventListener(\"click\", handleClick.bind(this));\n     function handleClick(event) {\n         console.log(\"メソッドが呼ばれたスコープは: \" + this);\n     }\n\n現在、EventDispatcher はイベントの優先順位やバブリングをサポートしないことに注意して下さい。将来のバージョンでは\nこれらの機能のどちらか、あるいは両方のサポートが追加されるかもしれません。",
            "is_constructor": 1
        },
        "MouseEvent": {
            "name": "MouseEvent",
            "shortname": "MouseEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 34,
            "description": "これは {{#crossLink \"DisplayObject\"}}{{/crossLink}} のインスタンスへの mousedown, mouseup, mousemove, stagemouseup, stagemousedown,\n mouseover, mouseout, click イベントに引数として渡されます。",
            "uses": [
                "EventDispatcher"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類です。",
                    "type": "String"
                },
                {
                    "name": "stageX",
                    "description": "ステージを基準とする X 座標です。",
                    "type": "Number"
                },
                {
                    "name": "stageY",
                    "description": "ステージを基準とする Y 座標です。",
                    "type": "Number"
                },
                {
                    "name": "target",
                    "description": "イベントに関連する表示オブジェクトです。EventDispatcher によりイベントが発行されるとこの値は上書きされます。",
                    "type": "DisplayObject"
                },
                {
                    "name": "nativeEvent",
                    "description": "イベントに関連するネイティブの DOM イベントです。",
                    "type": "MouseEvent"
                },
                {
                    "name": "pointerID",
                    "description": "ポインター固有の ID です。",
                    "type": "Number"
                },
                {
                    "name": "primary",
                    "description": "マルチタッチ環境で、最初のポインターかを示します。",
                    "type": "Boolean"
                },
                {
                    "name": "rawX",
                    "description": "ステージを基準とする実際の X 座標です。",
                    "type": "Number"
                },
                {
                    "name": "rawY",
                    "description": "ステージを基準とする実際の Y 座標です。",
                    "type": "Number"
                }
            ]
        },
        "AlphaMapFilter": {
            "name": "AlphaMapFilter",
            "shortname": "AlphaMapFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/filters/AlphaMapFilter.js",
            "line": 34,
            "description": "グレースケールのアルファマップ画像 （又は canvas） を対象に適用します。その際、マップの赤のチャネルが結果のアルファチャネルに\nコピーされます。RGB チャネルは対象からコピーされます。\n\n一般的には、パフォーマンす上の観点から  {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}} の使用が推奨されます。\n\nフィルターの使い方の例は {{#crossLink \"Filter\"}}{{/crossLink}} を参照して下さい。",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "alphaMap",
                    "description": "出力のアルファ値として使用するグレースケール画像 （又は canvas） です。縦横のサイズは対象と同じにします。",
                    "type": "Image"
                }
            ]
        },
        "AlphaMaskFilter": {
            "name": "AlphaMaskFilter",
            "shortname": "AlphaMaskFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/filters/AlphaMaskFilter.js",
            "line": 34,
            "description": "マスク画像 （又は canvas） のアルファを対象に適用します。その際、マスクから結果のアルファチャネルがコピーされ、\nRGB チャネルは対象からコピーされます。例えば、表示オブジェクトにアルファマスクを適用するために利用できます。\nまた、圧縮された JPG の RGB 画像に PNG32 のアルファマスクを組み合わせば、ARGB 情報を含む単一の PNG32 ファイルよりも\nずっとファイルサイズを押さえることができます。\n\n<b>重要：現在、このフィルターは targetCtx また targetX/Y を正しくサポートしていません。</b>\n\nフィルターの使い方の例は {{#crossLink \"Filter\"}}{{/crossLink}} を参照して下さい。",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mask",
                    "description": "",
                    "type": "Image"
                }
            ]
        },
        "BoxBlurFilter": {
            "name": "BoxBlurFilter",
            "shortname": "BoxBlurFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 34,
            "description": "BoxBlurFilter は表示オブジェクトにボックスブラーを適用します。\n\nフィルターの使い方の例は {{#crossLink \"Filter\"}}{{/crossLink}} を参照して下さい。",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "blurX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "blurY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "quality",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "ColorFilter": {
            "name": "ColorFilter",
            "shortname": "ColorFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 34,
            "description": "色の変換を適用します。\n\nフィルターの使い方の例は {{#crossLink \"Filter\"}}{{/crossLink}} を参照して下さい。",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "redMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "greenMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "blueMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "alphaMultiplier",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "redOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "greenOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "blueOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "alphaOffset",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "ColorMatrix": {
            "name": "ColorMatrix",
            "shortname": "ColorMatrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 34,
            "description": "{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}} で使用する行列の生成を支援する関数を提供します。\n もしくは、直接 ColorMatrixFilter 用の行列として使用できます。ほとんどのメソッドは連続した呼び出しを\n 容易にするようインスタンスを返します。\n\n <h4>例</h4>\n    myColorMatrix.adjustHue(20).adjustBrightness(50);\n\n フィルターの使い方の例は {{#crossLink \"Filter\"}}{{/crossLink}} を参照して下さい。",
            "is_constructor": 1,
            "extends": "Array",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "ColorMatrixFilter": {
            "name": "ColorMatrixFilter",
            "shortname": "ColorMatrixFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/filters/ColorMatrixFilter.js",
            "line": 34,
            "description": "彩度や明度の変更、反転といった複雑な色の操作を可能にします。\n色の変更に関するより詳細な情報は {{#crossLink \"ColorMatrix\"}}{{/crossLink}} を参照して下さい。\n\nフィルターの使い方の例は {{#crossLink \"Filter\"}}{{/crossLink}} を参照して下さい。",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "matrix",
                    "description": "実行される色への操作が記述された 4x5 行列。ColorMatrix クラスも参照して下さい。",
                    "type": "Array"
                }
            ]
        },
        "Filter": {
            "name": "Filter",
            "shortname": "Filter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/filters/Filter.js",
            "line": 34,
            "description": "全てのフィルターが継承するべき基底クラスです。フィルターは {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} メソッドを使って\nキャッシュされたオブジェクトに対して適用することが必要です。オブジェクトに変更があった場合は、再キャッシュ\nまたは {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}} を使用して下さい。\n\n<h4>例</h4>\n     myInstance.cache(0,0, 100, 100);\n     myInstance.filters = [\n         new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n         new createjs.BoxBlurFilter(5, 5, 10)\n     ];\n\n<h4>EaselJS のフィルター</h4>\nEaselJS ではいくつかの構築済みのフィルターが提供されています。個々のフィルターは最小化されたバージョンの\nEaselJS には含まれないことに注意して下さい。それらを使用する際は、HTML に明示的に含める必要があります。\n<ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : グレースケールの画像を表示オブジェクトのアルファチャンネルに適用します</li>\n     <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: 画像のアルファチャンネルをを表示オブジェクトのアルファチャンネルに適用します</li>\n     <li>{{#crossLink \"BoxBlurFilter\"}}{{/crossLink}}: 縦方向と横方向のぼかしを表示オブジェクトに適用します</li>\n     <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: 表示オブジェクトの色を変換します</li>\n     <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: {{#crossLink \"ColorMatrix\"}}{{/crossLink}} を使って画像を変換します</li>\n</ul>",
            "is_constructor": 1
        },
        "Matrix2D": {
            "name": "Matrix2D",
            "shortname": "Matrix2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 34,
            "description": "アフィン変換行列を表します。また、行列を生成し結合するツールを提供します。",
            "is_constructor": 1,
            "params": [
                {
                    "name": "a",
                    "description": "新しい行列の a プロパティを指定します。",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "新しい行列の b プロパティを指定します。",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "新しい行列の c プロパティを指定します。",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "新しい行列の d プロパティを指定します。",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "新しい行列の tx プロパティを指定します。",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "新しい行列の ty プロパティを指定します。",
                    "type": "Number"
                }
            ]
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/geom/Point.js",
            "line": 34,
            "description": "2 次元 x/ y 座標系における点を表します。\n\n<h4>例</h4>\n     var point = new Point(0, 100);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "X 座標です。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y 座標です。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "Rectangle": {
            "name": "Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 34,
            "description": "座標 (x, y) および (x+width, y+height) で定義される矩形を表します。",
            "example": [
                "\n     var rect = new createjs.Rectangle(0, 0, 100, 100);"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "X 座標です。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y 座標です。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "width",
                    "description": "この Rectangle の幅です。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "この Rectangle の高さです。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "Touch": {
            "name": "Touch",
            "shortname": "Touch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/ui/Touch.js",
            "line": 36,
            "description": "EaselJS内でデバイスに対してマルチタッチの機能を提供するグローバルなユーティリティ。現状W3C Touch API（iOSとモダンな\nAndroidブラウザ）とIE10をサポート。\n\nアプリケーションをクリーンアップする際は必ずタッチを{{#crossLink \"Touch/disable\"}}{{/crossLink}}してください。\nタッチがサポートされていない場合は安全に失敗するので、サポートされているかをチェックする必要はないことに留意してください。\n\n<h4>例</h4>\n     var stage = new createjs.Stage(\"canvas\");\n     createjs.Touch.enable(stage);",
            "static": 1
        },
        "Log": {
            "name": "Log",
            "shortname": "Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/utils/Log.js",
            "line": 34,
            "description": "Log はエラー出力を一括管理する仕組みを提供します。デフォルトでは、メッセージの出力先として console.log が使用されます。\nしかし、これは out 属性の設定により変更できます。",
            "is_constructor": 1
        },
        "SpriteSheetBuilder": {
            "name": "SpriteSheetBuilder",
            "shortname": "SpriteSheetBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 34,
            "description": "SpriteSheetBuilder は、実行時に、どんな表示オブジェクトからもスプライトシートを生成することを可能にします。\nこれにより、アセットをベクターグラフィックとして保持し （ファイルサイズを抑えるため）、実行にはスプライトシート\nとして描画してより良いパフォーマンスを得ることが可能になります。\n\nスプライトシートは同期又は非同期に生成できます。そのため、大きなスプライトシートも UI を固まらせることなく\n生成できます。\n\n生成されたスプライトシートで使われる \"画像\" は、実際には canvas の要素です。そして、その大きさは\n<code>maxWidth</code> または <code>maxHeight</code> の値に最も近い 2 の階乗の値になります。",
            "uses": [
                "EventDispatcher"
            ],
            "is_constructor": 1
        },
        "SpriteSheetUtils": {
            "name": "SpriteSheetUtils",
            "shortname": "SpriteSheetUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/utils/SpriteSheetUtils.js",
            "line": 34,
            "description": "SpriteSheetUtilsクラスは、{{#crossLink \"SpriteSheet\"}}{{/crossLink}}と協調して動作する静的メソッドの集合です。\nスプライトシートは連続した複数の画像(通常はアニメーションフレーム）が格子状に一枚の画像にまとめられたものです。\n例えば、8枚の100x100 の画像によって構成されるアニメーションは、400x200のスプライトシートにまとめることができます（4フレームごとに2列）。\nSpriteSheetUtils クラスは静的なインターフェースを提供しており、インスタンス化すべきではありません。",
            "static": 1
        },
        "Ticker": {
            "name": "Ticker",
            "shortname": "Ticker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/utils/Ticker.js",
            "line": 35,
            "description": "Tickerは、設定した間隔による、一元的なtickまたはハートビートのブロードキャストを提供しています。\nリスナーは設定された時間間隔が経過したとき通知されるように、tickイベントを登録することができます。\n\n注意点として、tickイベントが呼び出される間隔は目標間隔であり、CPU負荷が高い場合、より遅い間隔でブロードキャストされるかもしれません。\nTickerクラスは静的インターフェースを使用し(ex. <code>Ticker.getPaused()</code>)、インスタンス化すべきではありません。\n\n<h4>Example</h4>\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         // フレームごとにアクションが呼び出されます\n     }",
            "uses": [
                "EventDispatcher"
            ],
            "static": 1
        },
        "UID": {
            "name": "UID",
            "shortname": "UID",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS",
            "namespace": "",
            "file": "src/easeljs/utils/UID.js",
            "line": 34,
            "description": "連続したユニークな(重複しない)ID番号を生成するためのグローバルユーティリティです。UIDクラスは静的インターフェースを使用し(ex. <code>UID.get()</code>)、インスタンス化すべきではありません。",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 56,
            "description": "描画するイメージです。Image, Canvas, Videoのいずれかです。",
            "itemtype": "property",
            "name": "image",
            "type": "Image | HTMLCanvasElement | HTMLVideoElement",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 63,
            "description": "Bitmapをcanvasに描画するときにピクセル座標にスナッピングするか否かを指定します。",
            "itemtype": "property",
            "name": "snapToPixel",
            "type": "Boolean",
            "default": "true",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 71,
            "description": "ソースとなる画像の描画する範囲を指定します。指定しなかった場合、画像全体が描画されます。",
            "itemtype": "property",
            "name": "sourceRect",
            "type": "Rectangle",
            "default": "null",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 81,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 88,
            "description": "初期化を行います。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 105,
            "description": "表示オブジェクトがcanvasに描画されている場合、それが可視であるか否かを示します。\nこれは、ステージの範囲内に表示されているか否かを示すものではありません。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean 表示オブジェクトがcanvasに描画されている場合、それが可視であるか否かを示します。",
                "type": "Boolean"
            },
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 117,
            "itemtype": "property",
            "name": "DisplayObject_draw",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 124,
            "description": "表示オブジェクトを、visible, alpha, shadow, そしてtransformの設定を無視して、指定されたコンテキストで描画します。\n描画された場合にtrueを返します（機能をオーバーライドする場合に有用です）。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "canvas2Dコンテキストオブジェクトです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画において保存しているキャッシュを無視するか否かを指定します。\n例えば、キャッシュを再構築するのに使われます。（既存のキャッシュが再利用されるのを防ぐために）",
                    "type": "Boolean"
                }
            ],
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 147,
            "description": "Bitmapインスタンスの内容は既に単純なフォーマットであるため、キャッシュは不要です。\nパフォーマンスを下げるのでBitmapインスタンスをキャッシュすべきでは<b>ありません</b>。",
            "itemtype": "method",
            "name": "cache",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 153,
            "description": "Bitmapインスタンスの内容は既に単純なフォーマットであるため、キャッシュは不要です。\nパフォーマンスを下げるのでBitmapインスタンスをキャッシュすべきでは<b>ありません</b>。",
            "itemtype": "method",
            "name": "updateCache",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 159,
            "description": "Bitmapインスタンスの内容は既に単純なフォーマットであるため、キャッシュは不要です。\nパフォーマンスを下げるのでBitmapインスタンスをキャッシュすべきでは<b>ありません</b>。",
            "itemtype": "method",
            "name": "uncache",
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 165,
            "description": "Bitmapインスタンスのクローンを返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "Bitmapインスタンスのクローンです。",
                "type": "Bitmap"
            },
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/Bitmap.js",
            "line": 177,
            "description": "オブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "オブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "Bitmap"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 60,
            "description": "アニメーションが終了地点に達した時に発行されます。",
            "itemtype": "event",
            "name": "animationend",
            "params": [
                {
                    "name": "target",
                    "description": "イベントを発行したオブジェクトです。",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "イベントのタイプです。",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "終了したアニメーション名です。",
                    "type": "String"
                },
                {
                    "name": "next",
                    "description": "次に再生されるアニメーション名あるいはnullです。アニメーションがループしている時、これは現在のアニメーション名と同じものになります。",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 72,
            "description": "アニメーションが終了地点に達した時に呼び出される関数を指定します。\nこれは3つの引数とともに呼び出されます。:\n第一にこのインスタンスの参照、第二に終了したアニメーション名、第三に次に再生されるアニメーション名です。",
            "itemtype": "property",
            "name": "onAnimationEnd",
            "type": "{Function}",
            "deprecated": true,
            "deprecationMessage": "\"animationend\"イベントの使用を推奨します。こちらは将来のバージョンで削除される予定です。",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 82,
            "description": "次のdrawメソッドの呼び出しで描画されるフレームです。\n特記事項として、スプライトシートデータによっては、この値は連続していません。\n読み取り専用",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "{Number}",
            "default": "-1",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 92,
            "description": "現在再生中のアニメーションを返します。読み取り専用。",
            "itemtype": "property",
            "name": "currentAnimation",
            "type": "{String}",
            "final": 1,
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 100,
            "description": "アニメーションが各tickで自動的に進まないようにします。\n例えば、あなたがアイコン用のスプライトシートを作成した場合、pausedをtrueに設定し<code>currentFrame</code>を設定することで、\n適切なアイコンを表示することができます。",
            "itemtype": "property",
            "name": "paused",
            "type": "{Boolean}",
            "default": "false",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 110,
            "description": "再生するスプライトシートインスタンスです。それはソース画像、フレーム面積、フレームデータの情報を含みます。\n詳しくは {{#crossLink \"SpriteSheet\"}}{{/crossLink}} を見てください。",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "{SpriteSheet}",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 118,
            "description": "Bitmapをcanvasに描画するときにピクセル座標にスナッピングするか否かを指定します。",
            "itemtype": "property",
            "name": "snapToPixel",
            "type": "{Boolean}",
            "default": "true",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 126,
            "description": "1より大きなfrequencyを持つ複数のアニメーションを同時に再生するときに使われ、再生ヘッドのtickによる進み方にオフセットをつけることができます。\n例えば、あなたがfrequencyが2で、ひとつはoffsetが1に設定された2つのBitmapAnimationを作成するとしましょう。\n両方2tickごとに進みますが、交互のtickで進むこととなります。\nつまり、ひとつのインスタンスは奇数tickで進み、もうひとつは偶数tickで進みます。",
            "itemtype": "property",
            "name": "offset",
            "type": "{Number}",
            "default": "0",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 138,
            "description": "現在再生中のアニメーションの現在のフレーム番号です。\n正常に再生されていれば、0からn-1の値を連続的にとります。\nnは現在のアニメーションのフレーム数です。",
            "itemtype": "property",
            "name": "currentAnimationFrame",
            "type": "{Number}",
            "default": "0",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 159,
            "itemtype": "property",
            "name": "_advanceCount",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 167,
            "itemtype": "property",
            "name": "_animation",
            "access": "protected",
            "tagname": "",
            "type": "{Object}",
            "default": "null",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 176,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 183,
            "description": "初期化メソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 193,
            "description": "表示オブジェクトがcanvasに描画されている場合、それが可視であるか否かを示します。\nこれは、ステージの範囲内に表示されているか否かを示すものではありません。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 205,
            "itemtype": "property",
            "name": "DisplayObject_draw",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 212,
            "description": "表示オブジェクトを、visible, alpha, shadow, そしてtransformの設定を無視して、指定されたコンテキストで描画します。\n描画された場合にtrueを返します（機能をオーバーライドする場合に有用です）。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "canvas2Dコンテキストオブジェクトです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画において保存しているキャッシュを無視するか否かを指定します。\n例えば、キャッシュを再構築するのに使われます。（既存のキャッシュが再利用されるのを防ぐために）",
                    "type": "Boolean"
                }
            ],
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 234,
            "description": "Bitmapインスタンスの内容は既に単純なフォーマットであるため、キャッシュは不要です。\nパフォーマンスを下げるのでBitmapインスタンスをキャッシュすべきでは<b>ありません</b>。",
            "itemtype": "method",
            "name": "cache",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 240,
            "description": "Bitmapインスタンスの内容は既に単純なフォーマットであるため、キャッシュは不要です。\nパフォーマンスを下げるのでBitmapインスタンスをキャッシュすべきでは<b>ありません</b>。",
            "itemtype": "method",
            "name": "updateCache",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 246,
            "description": "Bitmapインスタンスの内容は既に単純なフォーマットであるため、キャッシュは不要です。\nパフォーマンスを下げるのでBitmapインスタンスをキャッシュすべきでは<b>ありません</b>。",
            "itemtype": "method",
            "name": "uncache",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 252,
            "description": "一時停止されていたアニメーションを再生開始します。\nBitmapAnimationは{{#crossLink \"BitmapAnimation/stop\"}}{{/crossLink}}あるいは{{#crossLink \"BitmapAnimation/gotoAndStop\"}}{{/crossLink}}\nの呼び出しで一時停止できます。\nフレームが1つだけのアニメーションの場合は変化しません。",
            "itemtype": "method",
            "name": "play",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 263,
            "description": "再生中のアニメーションを停止します。\nBitmapAnimationは{{#crossLink \"BitmapAnimation/stop\"}}{{/crossLink}}あるいは{{#crossLink \"BitmapAnimation/gotoAndStop\"}}{{/crossLink}}\nの呼び出しで一時停止できます。\nBitmapAnimationは{{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}}によって再生されます。\n特記事項として、{{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}}あるいは{{#crossLink \"BitmapAnimation/play\"}}{{/crossLink}}\nの呼び出しにより再生を再開できます。",
            "itemtype": "method",
            "name": "stop",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 276,
            "description": "pausedをfalseに設定し、指定したアニメーション名、フレーム名、あるいはフレーム番号のアニメーションを再生します。",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "再生ヘッドを移動して再生開始するフレーム番号あるいはアニメーション名です。",
                    "type": "String|Number"
                }
            ],
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 286,
            "description": "pausedをtrueに設定し、指定したアニメーション名、フレーム名、あるいはフレーム番号でシークします。",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "再生ヘッドを移動して停止するフレーム番号あるいはアニメーション名です。",
                    "type": "String|Number"
                }
            ],
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 296,
            "description": "再生ヘッドを進めます。これは各tickのデフォルト動作として呼び出されます。",
            "itemtype": "method",
            "name": "advance",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 306,
            "description": "現在のフレームの原点から見た境界を{{#crossLink \"Rectangle\"}}{{/crossLink}}の形で返します。\n例えば、90×70の<code>regX=50</code>と<code>regY=40</code>のフレームでは[x=-50, y=-40, width=90, height=70]のRectangleが返ります。\n\nSpriteSheetの{{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}メソッドも参照してください。",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "Rectangleインスタンスです。フレームが存在しない場合、あるいは画像が完全に読み込まれていない場合はnullを返します。",
                "type": "Rectangle"
            },
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 318,
            "description": "BitmapAnimationインスタンスのクローンを返します。\n特記事項として、SpriteSheetインスタンスはクローンで生成したインスタンス間で共有されます。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "BitmapAnimationインスタンスのクローンです。",
                "type": "BitmapAnimation"
            },
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 330,
            "description": "オブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "オブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 340,
            "itemtype": "property",
            "name": "DisplayObject__tick",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 347,
            "description": "pausedがtrueでない場合に <code>currentFrame</code> を進めます。\nこれは{{#crossLink \"Stage\"}}{{/crossLink}}がtickを実行した時に自動的に呼ばれます。",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_tick",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 362,
            "description": "現在のフレーム番号を設定し、アニメーションを進め、コールバックを適切に発行します。",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_normalizeCurrentFrame",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 397,
            "description": "\"animationend\"イベントを発行します。\nイベントハンドラがアニメーションを変化させた場合trueを返します。\n(例: calling {{#crossLink \"BitmapAnimation/stop\"}}{{/crossLink}},\n{{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}}, など。)",
            "itemtype": "property",
            "name": "_dispatchAnimationEnd",
            "access": "private",
            "tagname": "",
            "type": "{Function}",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 414,
            "itemtype": "property",
            "name": "DisplayObject_cloneProps",
            "access": "private",
            "tagname": "",
            "type": "{Function}",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 421,
            "itemtype": "method",
            "name": "cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Text"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/BitmapAnimation.js",
            "line": 437,
            "description": "再生ヘッドを指定したフレーム番号あるいはアニメーション名に移動します。",
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "再生ヘッドを移動させるフレーム番号あるいはアニメーション名です。",
                    "type": "String|Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BitmapAnimation"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 58,
            "description": "子の表示リストの配列です。\n通常、こちらを使って直接アクセスするのではなく、{{#crossLink \"Container/addChild\"}}{{/crossLink}},\n{{#crossLink \"Container/removeChild\"}}{{/crossLink}}, {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}といった\n子を管理するメソッドを用いるべきです。\nこちらは上級者のために設けられています。",
            "itemtype": "property",
            "name": "children",
            "type": "Array",
            "default": "null",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 72,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 79,
            "description": "初期化メソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 91,
            "description": "表示オブジェクトがcanvasに描画されている場合、それが可視であるか否かを示します。\nこれは、ステージの範囲内に表示されているか否かを示すものではありません。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean 表示オブジェクトがcanvasに描画されている場合、それが可視であるか否かを示します。",
                "type": "Boolean"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 103,
            "itemtype": "property",
            "name": "DisplayObject_draw",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 110,
            "description": "表示オブジェクトを、visible, alpha, shadow, そしてtransformの設定を無視して、指定されたコンテキストで描画します。\n描画された場合にtrueを返します（機能をオーバーライドする場合に有用です）。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "canvas2Dコンテキストオブジェクトです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画において保存しているキャッシュを無視するか否かを指定します。\n例えば、キャッシュを再構築するのに使われます。（既存のキャッシュが再利用されるのを防ぐために）",
                    "type": "Boolean"
                }
            ],
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 137,
            "description": "表示リストの最前面に子を追加します。\n\"addChild(child1, child2, ...);\"のようにして複数の子を追加することができます。\n追加された子を返します。\n複数追加された場合は最後の子を返します。\n\n<h4>例</h4>\n     container.addChild(bitmapInstance, shapeInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "追加する子表示オブジェクトです。",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "追加された子です。複数追加された場合は最後の子です。",
                "type": "DisplayObject"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 163,
            "description": "子を表示リストの指定したインデックスに追加し、parentを追加したContainerに設定します。\nインデックスが指定したインデックス以上であった子は、インデックスが1増えます。\n\"addChild(child1, child2, ...);\"のようにして複数の子を追加することができます。\n指定するインデックスは0以上numChildren以下でなければいけません。\n例えば、表示リストにおいてmyShapeをotherShapeの背面に加えたい場合は次のようにできます。\ncontainer.addChildAt(myShape, container.getChildIndex(otherShape))\nこれにより、otherShapeのインデックスは1増えます。\n追加された子を返します。\n複数追加された場合は最後の子を返します。\nインデックスが範囲外のときは何も起きません。",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "追加する子表示オブジェクトです。",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "子を追加するインデックスです。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "追加された子です。複数追加された場合は最後の子です。",
                "type": "DisplayObject"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 193,
            "description": "指定した子を表示リストから削除します。\n特記事項として、インデックスが既知の場合はremoveChildAt()を用いた方が高速です。\n\"removeChild(child1, child2, ...);\"のようにして複数の子を削除することができます。\nすべての指定した子が削除された場合はtrueを返し、表示リストに無い子が一つでもあればfalseを返します。",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "削除する子です。",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "すべての指定した子が削除された場合はtrue、表示リストに無い子が一つでもあればfalseです。",
                "type": "Boolean"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 212,
            "description": "表示リストにおいて指定したインデックスの子を削除し、それらのparentをnullに設定します。\n\"removeChildAt(2, 7, ...);\"のようにして複数の子を削除することができます。\nすべての指定した子が削除された場合はtrueを返し、インデックス範囲外の子が一つでもあればfalseを返します。",
            "params": [
                {
                    "name": "index",
                    "description": "削除する子のインデックスです。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "すべての指定した子が削除された場合はtrue、インデックス範囲外の子が一つでもあればfalseです。",
                "type": "Boolean"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 237,
            "description": "表示リストの全ての子を削除します。",
            "itemtype": "method",
            "name": "removeAllChildren",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 246,
            "description": "指定したインデックスの子を返します。",
            "itemtype": "method",
            "name": "getChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "取得する子のインデックスです。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "指定したインデックスの子です。",
                "type": "DisplayObject"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 256,
            "description": "指定したnameを持つ子を返します。",
            "itemtype": "method",
            "name": "getChildByName",
            "params": [
                {
                    "name": "name",
                    "description": "取得する子のnameです。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "指定したnameを持つ子です。",
                "type": "DisplayObject"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 270,
            "description": "子のリストに対して配列ソートを行います。",
            "itemtype": "method",
            "name": "sortChildren",
            "params": [
                {
                    "name": "sortFunction",
                    "description": "子のリストのソートに用いる関数です。詳しくはjavascriptのArray.sortドキュメントを参照してください。",
                    "type": "Function"
                }
            ],
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 279,
            "description": "表示リストにおいて指定した子のインデックスを返します。\n表示リストにない場合は-1を返します。",
            "itemtype": "method",
            "name": "getChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "インデックスを取得する子です。",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "指定した子のインデックスです。子が見つからない場合は-1を返します。",
                "type": "Number"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 290,
            "description": "表示リストの子の数を返します。",
            "itemtype": "method",
            "name": "getNumChildren",
            "return": {
                "description": "表示リストの子の数です。",
                "type": "Number"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 299,
            "description": "指定した2つのインデックスの子同士を交換します。\nインデックスが範囲外の場合、何も起きません。",
            "params": [
                {
                    "name": "index1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "index2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "swapChildrenAt",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 315,
            "description": "指定した2つの子の深度を交換します。\nどちらか一つでもこのコンテナの子でなければ何も起きません。",
            "params": [
                {
                    "name": "child1",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "child2",
                    "description": "",
                    "type": "DisplayObject"
                }
            ],
            "itemtype": "method",
            "name": "swapChildren",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 335,
            "description": "指定した子の深度を変更します。\n指定した子がこのコンテナにない場合、あるいは指定したインデックスが範囲外の場合は、何も起きません。",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "setChildIndex",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 354,
            "description": "指定した表示オブジェクトがこのContainer自身かあるいは子孫である場合、trueを返します。\n子孫であるとは、このContainerの子、孫、ひ孫、・・・であることです。",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "child",
                    "description": "チェックするDisplayObjectです。",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "指定した表示オブジェクトがこのContainer自身あるいは子孫である場合、trueです。",
                "type": "Boolean"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 369,
            "description": "表示オブジェクトが指定したローカル座標の点と重複あるいは交差しているか否かを検査します。\n（言い換えると、指定した点においてalpha > 0のピクセルを描画しているかを検査します）\n表示オブジェクトのalpah、shadow、それとcompositeOperation、regX/Yを含んだ全ての変形系プロパティは無視して判定します。",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "表示オブジェクトのローカル座標系における点のx値です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "表示オブジェクトのローカル座標系における点のy値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "DisplayObjectの可視な部分が指定されたローカルな点と交差しているか否かです。",
                "type": "Boolean"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 384,
            "description": "このコンテナに含まれる表示オブジェクトの中で、指定した座標下にあるものすべてを配列で返します。\nこのルーチンはmouseEnabledがfalseになっている表示オブジェクトを全て無視します。\n配列は表示の深度順にソートされており、最前面にあるものがインデックス0となります。\nこのメソッドはシェイプベースのヒット検出を用いており、処理コストが高いため、注意して使用することを推奨します。\n例えば、マウス化のオブジェクトを検出するときは、mousemoveイベントによって判定するのではなく、tick時、マウスの座標値が変化した場合に限定して使用するとよいでしょう。",
            "itemtype": "method",
            "name": "getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "コンテナに含まれる検出対象のx座標",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "コンテナに含まれる検出対象のy座標",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "指定した座標下にあるDisplayObjectの配列",
                "type": "Array"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 402,
            "description": "getObjectsUnderPoint()に類似していますが、最前面にある表示オブジェクトのみを返します。\nこちらのメソッドはgetObjectsUnderPoint()よりかなり速く動作しますが、やはり処理は高コストです。\n詳しくはgetObjectsUnderPoint()を参照してください。",
            "itemtype": "method",
            "name": "getObjectUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "コンテナに含まれる検出対象のx座標",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "コンテナに含まれる検出対象のy座標",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "指定した座標下にある最前面の表示オブジェクト",
                "type": "DisplayObject"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 416,
            "description": "このConainerのクローンを返します。\nこのインスタンスの現在のコンテキスト特有のいくつかのプロパティはデフォルト値となります（例えば.parentです）。",
            "params": [
                {
                    "name": "trueの場合、このコンテナの全子孫の再帰的なクローンが行われます。!~YUIDOC_LINE~!falseの場合、このコンテナのプロパティのクローンは行われますが、作成されたインスタンスは子を持ちません。",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "現在のインスタンスのクローンです。",
                "type": "Container"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 437,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "オブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 447,
            "itemtype": "property",
            "name": "DisplayObject__tick",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 454,
            "itemtype": "method",
            "name": "_tick",
            "access": "protected",
            "tagname": "",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/Container.js",
            "line": 466,
            "itemtype": "method",
            "name": "_getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "mouseEvents",
                    "description": "探索するイベントタイプを指定するビットマスク値です。\nビット1はpressとclickとdouble clickを指定し、ビット2はmouse overとmouse outを指定します。\nこのメソッドの実装は変更の可能性があります。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "protected",
            "tagname": "",
            "class": "Container"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 72,
            "description": "管理するDOMオブジェクト",
            "itemtype": "property",
            "name": "htmlElement",
            "type": "HTMLElement",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 80,
            "itemtype": "property",
            "name": "_oldMtx",
            "access": "protected",
            "tagname": "",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 87,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 94,
            "description": "初期化メソッド。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 111,
            "description": "キャンバスに描画する際に、ディスプレイオブジェクトが可視かどうかを示すtrueもしくはfalseを返します。\nこれは、ステージの境界内に表示されるかどうかを考慮することはありません。\nNOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "キャンバスに描かれた場合に、表示オブジェクトが可視かどうかを示すブール値",
                "type": "Boolean"
            },
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 122,
            "description": "指定されたコンテキストに、visible, alpha, shadow, transformを無視して描画します。\n描画が処理された場合はtrueを返します（オーバーライド機能に便利）。\nNOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "描きこむキャンバス2Dコンテキスト。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画操作が現在のキャッシュを無視するかどうかを指定します。\nたとえば、キャッシュを描画するために使用されます（自身に戻って単に既存キャッシュを描画することを防ぐために）。",
                    "type": "Boolean"
                }
            ],
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 153,
            "description": "DOMElementには適用されません。",
            "itemtype": "method",
            "name": "cache",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 159,
            "description": "DOMElementには適用されません。",
            "itemtype": "method",
            "name": "uncache",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 165,
            "description": "DOMElementには適用されません。",
            "itemtype": "method",
            "name": "updateCache",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 171,
            "description": "DOMElementには適用されません。",
            "itemtype": "method",
            "name": "hitArea",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 177,
            "description": "DOMElementには適用されません。",
            "itemtype": "method",
            "name": "localToGlobal",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 183,
            "description": "DOMElementには適用されません。",
            "itemtype": "method",
            "name": "globalToLocal",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 189,
            "description": "DOMElementには適用されません。",
            "itemtype": "method",
            "name": "localToLocal",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 195,
            "description": "DOMElementはクローンできません。エラーを投げます。",
            "itemtype": "method",
            "name": "clone",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 203,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスの文字列表現。",
                "type": "String"
            },
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 212,
            "description": "DOMElementインスタンスは完全なEaselJSディスプレイオブジェクトではなく、EaselJSマウスイベントに参加しないので、\nInteractionイベントは、DOMElementインスタンスではなく、`htmlElement`に追加されるべきです。",
            "itemtype": "event",
            "name": "click",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 218,
            "description": "DOMElementインスタンスは完全なEaselJSディスプレイオブジェクトではなく、EaselJSマウスイベントに参加しないので、\nInteractionイベントは、DOMElementインスタンスではなく、`htmlElement`に追加されるべきです。",
            "itemtype": "event",
            "name": "dblClick",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 224,
            "description": "DOMElementインスタンスは完全なEaselJSディスプレイオブジェクトではなく、EaselJSマウスイベントに参加しないので、\nInteractionイベントは、DOMElementインスタンスではなく、`htmlElement`に追加されるべきです。",
            "itemtype": "event",
            "name": "mousedown",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 230,
            "description": "HTMLElementは、DOMElementインスタンスではなく、mouseoverイベントを受け取ることができます。\nDOMElementインスタンスは完全なEaselJSディスプレイオブジェクトではなく、EaselJSマウスイベントに参加しないためです。",
            "itemtype": "event",
            "name": "mouseover",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 236,
            "description": "DOMElementには適用されません。",
            "itemtype": "event",
            "name": "tick",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 243,
            "itemtype": "property",
            "name": "DisplayObject__tick",
            "type": "Function",
            "access": "protected",
            "tagname": "",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DOMElement.js",
            "line": 250,
            "itemtype": "method",
            "name": "_tick",
            "access": "protected",
            "tagname": "",
            "class": "DOMElement"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 118,
            "description": "クロスドメインコンテンツに対しヒット検査、マウスイベント、getObjectsUnderPointといったものに関連した処理を行った時にエラーが発生するのを抑制します。",
            "itemtype": "property",
            "name": "suppressCrossDomainErrors",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 127,
            "itemtype": "property",
            "name": "_hitTestCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 136,
            "itemtype": "property",
            "name": "_hitTestContext",
            "type": "{CanvasRenderingContext2D}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 144,
            "itemtype": "property",
            "name": "_nextCacheID",
            "type": "{Number}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 154,
            "description": "ユーザが表示オブジェクト上でマウスの左ボタンを押した時に発行されます。\nイベントのプロパティ一覧については{{#crossLink \"MouseEvent\"}}{{/crossLink}}を参照してください。",
            "itemtype": "event",
            "name": "mousedown",
            "since": "0.6.0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 161,
            "description": "ユーザが表示オブジェクト上でマウスの左ボタンを押し、その表示オブジェクト上で離した時に発行されます。\nイベントのプロパティ一覧については{{#crossLink \"MouseEvent\"}}{{/crossLink}}を参照してください。",
            "itemtype": "event",
            "name": "click",
            "since": "0.6.0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 168,
            "description": "ユーザが表示オブジェクト上でマウスの左ボタンをダブルクリックしたときに発行されます。\nイベントのプロパティ一覧については{{#crossLink \"MouseEvent\"}}{{/crossLink}}を参照してください。",
            "itemtype": "event",
            "name": "dblClick",
            "since": "0.6.0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 175,
            "description": "表示オブジェクト内にユーザのマウスが入ると発行されます。\nこのイベントは{{#crossLink \"Stage.enableMouseOver\"}}{{/crossLink}}によって有効化する必要があります。\nイベントのプロパティ一覧については{{#crossLink \"MouseEvent\"}}{{/crossLink}}を参照してください。",
            "itemtype": "event",
            "name": "mouseover",
            "since": "0.6.0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 184,
            "description": "表示オブジェクトからユーザのマウスが外に出ると発行されます。\nこのイベントは{{#crossLink \"Stage.enableMouseOver\"}}{{/crossLink}}によって有効化する必要があります。\nイベントのプロパティ一覧については{{#crossLink \"MouseEvent\"}}{{/crossLink}}を参照してください。",
            "itemtype": "event",
            "name": "mouseout",
            "since": "0.6.0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 192,
            "description": "ステージの更新が発生するとき、ステージの上にある各表示オブジェクトに対し発行されます。\nこれは、パスを描画する前に即座に発行されます。\n{{#crossLink \"Stage/update\"}}{{/crossLink}}が呼ばれるとき、最初にステージ上の全表示オブジェクトにtickイベントが発行され、次に全表示オブジェクトがステージに描画されます。\n子は、親にイベントが発行される前に、深度順にイベントが発行されます。",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "イベントが発行されるオブジェクトです。",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "イベントタイプです。",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Stage.update()に渡された全てのパラメータが格納された配列です。\n例えば、stage.update(\"hello\")を実行した場合、paramsは[\"hello\"]になります。",
                    "type": "Array"
                }
            ],
            "since": "0.6.0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 206,
            "description": "表示オブジェクトのアルファ値（透過度）です。0は完全透過であり、1が完全不透明です。",
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 214,
            "description": "キャッシュがアクティブのとき、キャッシュされたこの表示オブジェクトを保持するcanvasを返します。\n詳しくはcache()メソッドを参照してください。\n読み取り専用",
            "itemtype": "property",
            "name": "cacheCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 224,
            "description": "この表示オブジェクトの一意なIDです。\nいくつかの用途において便利に使えます。\nUnique ID for this display object. Makes display objects easier for some uses.",
            "itemtype": "property",
            "name": "id",
            "type": "{Number}",
            "default": "-1",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 234,
            "description": "Stage.getObjectsUnderPoint()が実行されるときおよびマウス操作に対しこのオブジェクトを対象にするか否かを指定します。\nContainerでtrueにした場合、子のmouseEnabledがtrueであったとしてもContainerが返ります。",
            "itemtype": "property",
            "name": "mouseEnabled",
            "type": "{Boolean}",
            "default": "true",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 243,
            "description": "表示オブジェクトに任意でつけられる名前です。toString()に含まれます。デバッグに役立ちます。",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 251,
            "description": "この表示オブジェクトを含むContainerあるいはStageオブジェクトです。\n何にも追加されていない場合nullを返します。\n読み取り専用",
            "itemtype": "property",
            "name": "parent",
            "final": 1,
            "type": "{Container}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 262,
            "description": "この表示オブジェクトの登録点のx座標です。\n例えば、100x100pxのBitmapを中心点の周りで回転させたいとき、regXとregYを50に設定します。",
            "itemtype": "property",
            "name": "regX",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 271,
            "description": "この表示オブジェクトの登録点のy座標です。\n例えば、100x100pxのBitmapを中心点の周りで回転させたいとき、regXとregYを50に設定します。",
            "itemtype": "property",
            "name": "regY",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 280,
            "description": "この表示オブジェクトの回転角（度単位）です。",
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 288,
            "description": "この表示オブジェクトの水平方向のスケール値です。\n例えば、scaleXを2に設定した場合、幅が2倍に表示されます。",
            "itemtype": "property",
            "name": "scaleX",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 297,
            "description": "この表示オブジェクトの垂直方向のスケール値です。\n例えば、scaleYを0.5に設定した場合、高さが半分に表示されます。",
            "itemtype": "property",
            "name": "scaleY",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 306,
            "description": "この表示オブジェクトの水平方向の斜傾倍率です。",
            "itemtype": "property",
            "name": "skewX",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 314,
            "description": "この表示オブジェクトの垂直方向の斜傾倍率です。",
            "itemtype": "property",
            "name": "skewY",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 322,
            "description": "この表示オブジェクトに描画する影を定義する影オブジェクトです。\n影を削除する場合はnullを設定してください。\nnullの場合、このプロパティは親のコンテナから継承されます。",
            "itemtype": "property",
            "name": "shadow",
            "type": "{Shadow}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 332,
            "description": "この表示オブジェクトをcanvasに描画するか否か、Stage.getObjectsUnderPoint()実行時に含まれるべきか否かを指定します。\nStage.getObjectsUnderPoint().",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "default": "true",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 341,
            "description": "この表示オブジェクトのx（水平）座標値です。親からの相対座標です。",
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 349,
            "description": "この表示オブジェクトのy（垂直）座標値です。親からの相対座標です。",
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 357,
            "description": "この表示オブジェクトのピクセルを背後にあるものと合成する方法を指定します。\nnullのときは親コンテナの値を継承します。\n詳しくは、<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\nwhatwgの合成についての仕様</a>を参照してください。",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 368,
            "description": "表示オブジェククトのx値とy値をステージ描画前に丸めるか否かを指定します。\nピクセルにスナッピングすることにより、より鮮明で高速な画像（例えばBitmapやキャッシュされたオブジェクト）の描画が可能になります。\nステージのsnapPixelsEnabledがtrueに設定されている時のみ有効です。\nsnapToPixelプロパティはBitmapとBitmapAnimationにおいてデフォルトでtrueであり、その他の表示オブジェクトではデフォルトでfalseです。\n<br/><br/>\n注意:丸まるのは表示オブジェクトのローカルな位置のみでです。\n表示オブジェクトの全ての先祖（先祖コンテナ）がピクセルにスナッピングされているようにすべきです。\n先祖のsnapToPixelプロパティをtrueに設定することによりそれが可能になります。",
            "itemtype": "property",
            "name": "snapToPixel",
            "type": "{Boolean}",
            "default": "false",
            "deprecated": true,
            "deprecationMessage": "最近のブラウザのハードウェアアクセラレーションにより不要になっています。",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 384,
            "description": "onPressコールバックはユーザが表示オブジェクト上でマウスを押下したときに呼ばれます。\nハンドラには対応するMouseEventインスタンスを格納したパラメータがひとつ渡されます。\nonMouseMoveやonMouseUpコールバックを使うことでユーザがマウスボタンを離すまでにそれらのイベントを受け取ることができます。\nonPressハンドラがコンテナに設定された場合、子がクリックされた場合にイベントを受け取ります。",
            "itemtype": "property",
            "name": "onPress",
            "type": "{Function}",
            "deprecated": true,
            "deprecationMessage": "\"mousedown\"イベントを推奨します。将来のバージョンで削除されるでしょう。",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 395,
            "description": "onClickコールバックはユーザが表示オブジェクト上でマウスを押下し離したときに呼ばれます。\nハンドラには対応するMouseEventインスタンスを格納したパラメータがひとつ渡されます。\nonClickハンドラがコンテナに設定された場合、子がクリックされた場合にイベントを受け取ります。",
            "itemtype": "property",
            "name": "onClick",
            "type": "{Function}",
            "deprecated": true,
            "deprecationMessage": "\"click\"イベントを推奨します。将来のバージョンで削除されるでしょう。",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 405,
            "description": "onDoubleClickコールバックはユーザが表示オブジェクト上でダブルクリックしたときに呼ばれます。\nハンドラには対応するMouseEventインスタンスを格納したパラメータがひとつ渡されます。\nonDoubleClickハンドラがコンテナに設定された場合、子がダブルクリックされた場合にイベントを受け取ります。",
            "itemtype": "property",
            "name": "onDoubleClick",
            "type": "{Function}",
            "deprecated": true,
            "deprecationMessage": "\"dblClick\"イベントを推奨します。将来のバージョンで削除されるでしょう。",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 415,
            "description": "onMouseOverコールバックはユーザが表示オブジェクト上にマウスを侵入させたときに呼ばれます。\nこのイベントを有効化するにはstage.enableMouseOver()を呼ばねばなりません。\nハンドラには対応するMouseEventインスタンスを格納したパラメータがひとつ渡されます。",
            "itemtype": "property",
            "name": "onMouseOver",
            "type": "{Function}",
            "deprecated": true,
            "deprecationMessage": "\"mouseover\"イベントを推奨します。将来のバージョンで削除されるでしょう。",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 425,
            "description": "onMouseOverコールバックはユーザが表示オブジェクト上からマウスを外に出したときに呼ばれます。\nこのイベントを有効化するにはstage.enableMouseOver()を呼ばねばなりません。\nハンドラには対応するMouseEventインスタンスを格納したパラメータがひとつ渡されます。",
            "itemtype": "property",
            "name": "onMouseOut",
            "type": "{Function}",
            "deprecated": true,
            "deprecationMessage": "\"mouseout\"イベントを推奨します。将来のバージョンで削除されるでしょう。",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 435,
            "description": "onTickコールバックはステージが更新されるときにステージ上の各表示オブジェクトに対して呼ばれます。\nこれはパスを描画する前に即座に発生します。\nstage.update()が呼ばれるとき、最初にステージ上の全表示オブジェクトに対しonTickメソッドが呼ばれ、次に全表示オブジェクトがステージに描画されます。\n子は、親のonTickメソッドが呼ばれる前に、深度順にonTickが呼び出されます。\n<br/><br/>\nstage.update()に渡された全てのパラメータがonTick()ハンドラに渡されます。\n例えば、stage.update(\"hello\")が呼ばれた時、全表日オブジェクトに対してonTick(\"hello\")が呼ばれます。",
            "itemtype": "property",
            "name": "onTick",
            "type": "{Function}",
            "deprecated": true,
            "deprecationMessage": "\"tick\"イベントを推奨します。将来のバージョンで削除されるでしょう。",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 449,
            "description": "この表示オブジェクトに適用するFilterオブジェクトの配列です。\nFilterはcache()あるいはupdateCache()が呼ばれた時のみ適用/更新され、キャッシュされた領域にのみ適用されます。",
            "itemtype": "property",
            "name": "filters",
            "type": "{Array}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 458,
            "description": "この表示オブジェクトの現在のキャッシュを一意に識別するIDを返します。\nこれは、前回のチェックからキャッシュが更新されたかどうかの判定に使用することができます。",
            "itemtype": "property",
            "name": "cacheID",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 467,
            "description": "この表示オブジェクトのベクターマスク（クリッピングパス）であるShapeインスタンスです。\n(シェイプオブジェクト自身がこの表示オブジェクトの親の子であるかのように)シェイプの変形は表示オブジェクトの親の座標に対し相対的に行われます。",
            "itemtype": "property",
            "name": "mask",
            "type": "{Shape}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 476,
            "description": "マウス操作あるいはgetObjectsUnderPointで検査に使われる表示オブジェクトです。\nヒットエリアの変形はこの表示オブジェクトの座標に対して相対的に（あたかもこの表示オブジェクトの子であるかのようにregX/Yに対して相対的に）行われます。\nhitAreaは現在hitTest()メソッドに使われて”いません”。\n\n特記事項として、hitAreaはStageではサポートされていません。",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 488,
            "description": "ユーザが表示オブジェクト上でホバーしているときに表示されるCSSカーソル（例えば”ポインタ”、”ヘルプ”、”文字列”など）です。\nこのプロパティを使うには、stage.enableMouseOver()を用いてmouseoverを有効化する必要があります。\nnullの場合はデフォルトカーソルが使われます。",
            "itemtype": "property",
            "name": "cursor",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 512,
            "itemtype": "property",
            "name": "_cacheOffsetX",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 520,
            "itemtype": "property",
            "name": "_cacheOffsetY",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 528,
            "itemtype": "property",
            "name": "_cacheScale",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "1",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 536,
            "itemtype": "property",
            "name": "_cacheDataURLID",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 544,
            "itemtype": "property",
            "name": "_cacheDataURL",
            "access": "protected",
            "tagname": "",
            "type": "{String}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 552,
            "itemtype": "property",
            "name": "_matrix",
            "access": "protected",
            "tagname": "",
            "type": "{Matrix2D}",
            "default": "null",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 564,
            "description": "初期化メソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 575,
            "description": "表示オブジェクトがcanvas描画において可視か否かをtrueあるいはfalseで返します。\nステージの範囲内で可視か否かではありません。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean 表示オブジェクトがcanvas描画において可視か否かです。",
                "type": "Boolean"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 586,
            "description": "表示オブジェクトを、visible, alpha, shadow, そしてtransformの設定を無視して、指定されたコンテキストで描画します。\n描画された場合にtrueを返します（機能をオーバーライドする場合に有用です）。\n注意: このメソッドは主に内部での使用を意図したものですが、高度な使用において役に立つでしょう。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "canvas2Dコンテキストオブジェクトです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画において保存しているキャッシュを無視するか否かを指定します。\n例えば、キャッシュを再構築するのに使われます。（既存のキャッシュが再利用されるのを防ぐために）",
                    "type": "Boolean"
                }
            ],
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 603,
            "description": "この表示オブジェクトの変形、α値、globalCompositeOperation、クリッピングパス（マスク）、shadowを指定されたコンテキストに適用します。\n典型的には描画前に呼ばれます。",
            "itemtype": "method",
            "name": "updateContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "更新するcanvas2Dコンテキストオブジェクトです。",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 632,
            "description": "新しいcanvasに表示オブジェクトを描画し、それは今後の描画で使い続けます。\n頻繁には変化しない複雑な構成物（例えば動かない多数の子を持ったContainerや複雑なShape）であれば、毎tickで描画される必要はないため、\nより高速な描画を可能にします。\nキャッシュされた表示オブジェクトは移動、回転、フェードなどを自由に行うことができますが、構成要素が変化した場合、updateCache()あるいはcache()\nを呼ぶことにより、手動でキャッシュを更新せねばなりません。\nx, y, w, hのパラメータによりキャッシュする領域を指定する必要があります。\nこれにより表示オブジェクトの座標において描画とキャッシュを行う矩形を定義します。\n例えば、0, 0を中心とした半径25の円をShapeで定義する場合、全シェイプをキャッシュするにはmyShape.cache(-25, -25, 50, 50)を呼びます。",
            "itemtype": "method",
            "name": "cache",
            "params": [
                {
                    "name": "x",
                    "description": "キャッシュ領域のx座標です。",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The x coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "キャッシュ領域のy座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "キャッシュ領域の幅です。",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "キャッシュ領域の高さです。",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "オプション。キャッシュが生成されるスケールです。\n例えば、myShape.cache(0,0,100,100,2)によってベクターシェイプをキャッシュする場合、cacheCanvasは200×200ピクセルとなります。\nこれにより、より高い再現性でスケールや回転が可能になります。\nデフォルト値は1です。",
                    "type": "Number"
                }
            ],
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 665,
            "description": "表示オブジェクトをキャッシュに再描画します。\nupdateCache()をアクティブなキャッシュを用意せずに呼んだ場合、エラーを発生させます。\ncompositeOperationがnullの場合、現在のキャッシュは描画前にクリアされます。\nそうでない場合は表示オブジェクトは既存のキャッシュ上に指定したcompositeOperationに従って描画されます。",
            "itemtype": "method",
            "name": "updateCache",
            "params": [
                {
                    "name": "compositeOperation",
                    "description": "描画に使用するcompositeOperationです。nullの場合はキャッシュをクリアし再描画します。\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\nwhatwgの合成についての仕様</a>.",
                    "type": "String"
                }
            ],
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 689,
            "description": "現在のキャッシュをクリアします\n詳しくはcache()を参照してください。",
            "itemtype": "method",
            "name": "uncache",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 700,
            "description": "キャッシュのデータURLを返します。\nこの表示オブジェクトがキャッシュされてない場合はnullを返します。\nキャッシュが変化していない場合に新しいデータURLが生成されていないことを確認するためにcacheIDを使用できます。",
            "itemtype": "method",
            "name": "getCacheDataURL.",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 712,
            "description": "この表示オブジェクトが描画されるステージを返します。\nステージに追加されていない場合はnullを返します。",
            "itemtype": "method",
            "name": "getStage",
            "return": {
                "description": "表示オブジェクトがステージの子孫である場合はそのステージインスタンスです。ステージに追加されていない場合はnullです。",
                "type": "Stage"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 728,
            "description": "指定したxとy位置をこの表示オブジェクトの座標からグローバル（ステージ）座標に変換します。\n例えば、ネストされた表示オブジェクトの特定の点に貼られたHTMLラベルの位置を調べるのに使用できます。\nステージ座標に変換されたxとyプロパティを持ったPointインスタンスを返します。",
            "itemtype": "method",
            "name": "localToGlobal",
            "params": [
                {
                    "name": "x",
                    "description": "この表示オブジェクトにおける変換したいx座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "この表示オブジェクトにおける変換したいy座標です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "ステージ座標に変換されたxとyプロパティを持ったPointインスタンスです。",
                "type": "Point"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 744,
            "description": "指定したxとy位置をグローバル（ステージ）座標からこの表示オブジェクトの座標に変換します。\n例えば、表示オブジェクト上でマウスの現在の位置を調べるのに使用出来ます。\n表示オブジェクトの座標に変換されたxとyプロパティを持ったPointインスタンスを返します。",
            "itemtype": "method",
            "name": "globalToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "ステージにおける変換したいx座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ステージにおける変換したいy座標です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "表示オブジェクトの座標に変換されたxとyプロパティを持ったPointインスタンスです。",
                "type": "Point"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 761,
            "description": "指定したxとy位置をこの表示オブジェクトの座標から指定した表示オブジェクトの座標に変換します。\n指定した表示オブジェクトの座標に変換されたxとyプロパティを持ったPointインスタンスを返します。\n実質的に、var pt = this.localToGlobal(x, y); pt = target.globalToLocal(pt.x, pt.y)をするのと同じです。",
            "itemtype": "method",
            "name": "localToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "この表示オブジェクトにおける変換したいx座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "この表示オブジェクトにおける変換したいy座標です。",
                    "type": "Number"
                },
                {
                    "name": "target",
                    "description": "座標を変換する対象とする表示オブジェクトです。",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "指定した表示オブジェクトの座標に変換されたxとyプロパティを持ったPointインスタンスです。",
                "type": "Point"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 776,
            "description": "表示オブジェクトに変形系のプロパティを迅速に設定するためのショートカットメソッドです。\n全てのパラメータがオプションです。\n省略されたパラメータはデフォルト値となります（例：x/yにおいては0、scaleX/Yにおいては1）。",
            "itemtype": "method",
            "name": "setTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "このインスタンスを返します。メソッドチェーンに用いることができます。",
                "type": "DisplayObject"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 805,
            "description": "このオブジェクトの変形に対応した行列を返します。",
            "itemtype": "method",
            "name": "getMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "このパラーメータはオプションです。計算された結果を格納するためのMatrix2Dオブジェクトです。nullの場合は新しく生成された行列オブジェクトが返されます。",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "表示オブジェクトの変形を表現する行列です。",
                "type": "Matrix2D"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 816,
            "description": "この表示オブジェクトから最上位の祖先（通常はステージ）までの全祖先Containerの変形を全てかけあわせたMatrix2Dオブジェクトを生成します。\nこれは、locatToGlobalやglobalToLocalのように座標空間間の座標変換に用いることができます。",
            "itemtype": "method",
            "name": "getConcatenatedMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "このパラーメータはオプションです。計算された結果を格納するためのMatrix2Dオブジェクトです。nullの場合は新しく生成された行列オブジェクトが返されます。",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "この表示オブジェクトから最上位の祖先（通常はステージ）までの全祖先Containerの変形を全てかけあわせたMatrix2Dオブジェクトです。",
                "type": "Matrix2D"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 834,
            "description": "表示オブジェクトが指定したローカル座標の点と重複あるいは交差しているか否かを検査します。\n（言い換えると、指定した点においてalpha > 0のピクセルを描画しているかを検査します）\n表示オブジェクトのalpah、shadow、それとcompositeOperation、regX/Yを含んだ全ての変形系プロパティは無視して判定します。",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "表示オブジェクトのローカル座標系における点のx値",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "表示オブジェクトのローカル座標系における点のy値",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "DisplayObjectの可視な部分が指定されたローカルな点と交差しているか否かです。",
                "type": "Boolean"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 857,
            "description": "DisplayObjectインスタンスの複数のプロパティを設定するためのチェーン可能なショートカットメソッドを提供します。\n例:\nvar shape = stage.addChild( new Shape() ).set({graphics:myGraphics, x:100, y:100, alpha:0.5});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "DisplayObjectに値をコピーするプロパティを含む汎用オブジェクトです。",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれるDisplayObjectインスタンスを返します（メソッドチェーンに用いることができます）。",
                "type": "DisplayObject"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 870,
            "description": "DisplayObjectのクローンを返します。\nこのConainerのクローンを返します。\nこのインスタンスの現在のコンテキスト特有のいくつかのプロパティはデフォルト値となります（例えば.parentです）。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在のDisplayObjectインスタンスのクローンです。",
                "type": "DisplayObject"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 883,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "オブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 895,
            "itemtype": "method",
            "name": "cloneProps",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "o",
                    "description": "現在のDisplayObjectのプロパティをコピーしたDisplayObjectインスタンスです。",
                    "type": "DisplayObject"
                }
            ],
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 922,
            "itemtype": "method",
            "name": "_applyShadow",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "shadow",
                    "description": "",
                    "type": "Shadow"
                }
            ],
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 937,
            "itemtype": "method",
            "name": "_tick",
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 949,
            "itemtype": "method",
            "name": "_testHit",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 966,
            "itemtype": "method",
            "name": "_applyFilters",
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/DisplayObject.js",
            "line": 981,
            "description": "表示オブジェクトが指定したイベントタイプのリスナーを持っているか否かを返します。",
            "itemtype": "method",
            "name": "_hasMouseHandler",
            "params": [
                {
                    "name": "typeMask",
                    "description": "イベントタイプを指定するビットマスクです。1はpressとclickとdouble click、2はmouse overとmouse outを指定します。\nこの実装は変更の可能性があります。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "DisplayObject",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 46,
            "itemtype": "method",
            "name": "exec",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Command",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 128,
            "description": "指定されたRGBカラー数値に基づいて、\"rgba(255,255,255,1.0)\"形式、\nまたは透明度がnullの場合は\"rgb(255,255,255)\"の形式で、CSSと互換性のある色の文字列を返します。例えば、\n\n     Graphics.getRGB(50, 100, 150, 0.5);\n\nは\"rgba(50,100,150,0.5)\"を返します。また、最初のパラメータとして単体の16進数カラー値、\n2番目のパラメータとして透明度(オプション)の受け渡しもサポートします。例えば、\n\n     Graphics.getRGB(0xFF00FF, 0.2);\n\nは\"rgba(255,0,255,0.2)\"を返します。",
            "itemtype": "method",
            "name": "getRGB",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "0から0xFF(255)の間の、色の赤成分。",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "0から0xFF(255)の間の、色の緑成分。",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "0から0xFF(255)の間の、色の青成分。",
                    "type": "Number"
                },
                {
                    "name": "（オプション）",
                    "description": "0が完全に透明から、1が完全に不透明の間の、色の透明度。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "指定されたRGBカラー数値に基づいた、\"rgba(255,255,255,1.0)\"形式、\nまたは透明度がnullの場合は\"rgb(255,255,255)\"の形式で、CSSと互換性のある色の文字列",
                "type": "String"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 163,
            "description": "指定されたHSLカラー数値に基づいて、\"hsla(360,100,100,1.0)\"形式、\nまたは透明度がnullの場合は\"hsl(360,100,100)\"の形式で、CSSと互換性のある色の文字列を返します。\n例えば、以下の場合は\"hsl(150,100,70)\"を返します。\n\n     Graphics.getHSL(150, 100, 70);",
            "itemtype": "method",
            "name": "getHSL",
            "static": 1,
            "params": [
                {
                    "name": "hue",
                    "description": "0から360までの、色の色相。",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "0から100までの、色の彩度。",
                    "type": "Number"
                },
                {
                    "name": "lightness",
                    "description": "0から100までの、色の明度。",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "(オプション) 0が完全に透明から、1が完全に不透明の間の、色の透明度。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "指定されたHSLカラー数値に基づいた、\"hsla(360,100,100,1.0)\"形式、\nまたは透明度がnullの場合は\"hsl(360,100,100)\"の形式で、CSSと互換性のある色の文字列。",
                "type": "String"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 187,
            "description": "値をBase64文字列に変換します。{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}で使用されます。",
            "itemtype": "property",
            "name": "BASE_64",
            "static": 1,
            "final": 1,
            "type": "{Object}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 197,
            "description": "{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}}の線端パラメータを表す数値を、\n対応する文字列値に変換します。これは主に短縮版API用です。変換は以下のようになります:\n0 は \"なし\", 1 は \"丸型\", and 2 は \"角型\"。\n例は、線端を\"角型\"に設定する場合です：\n\n     myGraphics.ss(16, 2);",
            "itemtype": "property",
            "name": "STROKE_CAPS_MAP",
            "static": 1,
            "final": 1,
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 212,
            "description": "{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}}の結合スタイル値を表す数値を、\n対応する文字列値に変換します。これは主に短縮版API用です。変換は以下のようになります:\n0 は \"マイター\"、1 は \"ラウンド\"、2 は \"ベベル\"。\n例は、結合スタイルを\"ベベル\"に設定する場合です：\n     myGraphics.ss(16, 0, 2);",
            "itemtype": "property",
            "name": "STROKE_JOINTS_MAP",
            "static": 1,
            "final": 1,
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 226,
            "itemtype": "property",
            "name": "_ctx",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{CanvasRenderingContext2D}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 234,
            "itemtype": "property",
            "name": "beginCmd",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{Command}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 242,
            "itemtype": "property",
            "name": "fillCmd",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{Command}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 250,
            "itemtype": "property",
            "name": "strokeCmd",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{Command}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 261,
            "itemtype": "property",
            "name": "_strokeInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 268,
            "itemtype": "property",
            "name": "_strokeStyleInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 275,
            "itemtype": "property",
            "name": "_ignoreScaleStroke",
            "access": "protected",
            "tagname": "",
            "type": "Boolean",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 282,
            "itemtype": "property",
            "name": "_fillInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 289,
            "itemtype": "property",
            "name": "_instructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 296,
            "itemtype": "property",
            "name": "_oldInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 303,
            "itemtype": "property",
            "name": "_activeInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 310,
            "itemtype": "property",
            "name": "_active",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 318,
            "itemtype": "property",
            "name": "_dirty",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 326,
            "description": "初期化メソッド",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 336,
            "description": "Graphicsインスタンスが描画命令を持っていない場合、trueを返します。",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "Graphicsインスタンスが描画命令を持っていない場合、trueを返します。",
                "type": "Boolean"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 345,
            "description": "指定されたコンテキストに、それ自身の表示・非表示、透明度、影、変形は無視して、表示オブジェクトを描画します。\n描画が処理された場合trueを返します (機能をオーバーライドするのに有用)。\n\n注意：このメソッドは主に内部的な用途のためのものですが、高度な利用方法にも有用かもしれません。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "描画する対象の、canvas2Dコンテクストオブジェクト。",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 361,
            "description": "Graphicsインスタンスに対して線の描画のみを行い、塗りやストロークを含む線以外の命令をスキップします。\n例えば、DisplayObject.clippingPathにおいて、クリッピングパスを描画するために使用されます。",
            "itemtype": "method",
            "name": "drawAsPath",
            "params": [
                {
                    "name": "ctx",
                    "description": "描画する対象の、canvas2Dコンテクストオブジェクト。",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 377,
            "description": "指定した座標に描画点を移動します。",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "描画点の移動先のx座標。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "描画点の移動先のy座標。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 389,
            "description": "現在の描画位置から指定した座標に対して線を描画します。指定した座標は、新しい現在の描画位置になります。\n\nより詳しい情報は\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\nwhatwg spec</a>\nを参照してください。",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "線を描画する先となる描画点のx座標。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "線を描画する先となる描画点のy座標。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 407,
            "description": "指定した制御点と半径で円弧を描画します。詳細な情報は、\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\nを参照してください。\nwhatwg spec</a>.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 426,
            "description": "半径、始点の角度、終点の角度、中心店の座標(x, y)から定義される円弧を描画します。\n以下の例では、半径20で中心点が(100, 100)の完全な円を描画します:\n\n     arc(100, 100, 20, 0, Math.PI*2);\n\n詳細な情報は、\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\nを参照してください。",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ラジアン単位による始点の角度。",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ラジアン単位による終点の角度。",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "anticlockwise",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 451,
            "description": "制御点(cpx, cpy)を使用して、現在の描画位置から二次曲線(x, y)を描画します。\n詳細な情報は、\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\nwhatwg spec</a>\nを参照してください。",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 470,
            "description": "制御点（cp1x、cp1y）と（cp2x、cp2y）を使用して、現在の描画位置から（x、y）にベジエ曲線を描画します。\n詳細な情報は、\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\nwhatwg spec</a>\nを参照してください。",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 491,
            "description": "現在の塗りとストロークを使用して、指定された幅と高さで（x、y）の位置に四角形を描画します。\n詳細な情報は、\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\nwhatwg spec</a>\nを参照してください。",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "四角形の幅",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "四角形の高さ",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 510,
            "description": "最後に設定された塗りまたはストロークを使用して、\n現在の描画ポイントから最初の描画ポイントに有効な線を引き、現在のパスを閉じます。",
            "itemtype": "method",
            "name": "closePath",
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 526,
            "description": "すべての描画命令を消去して、Graphicsインスタンスを効果的にリセットします。",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 540,
            "description": "指定した色で塗りつぶしを開始します。このメソッドは現在のサブパスを終了します。",
            "itemtype": "method",
            "name": "beginFill",
            "params": [
                {
                    "name": "color",
                    "description": "CSS互換性のある色の値（例：\"red\"、 \"＃FF0000\"、または \"RGBA(255,0,0,0.5)\"）。\nnullに設定すると、塗りなしになります。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 553,
            "description": "(x0, y0)から(x1, y1)の線で定義された、線形グラデーションの塗りを開始します。このメソッドは現在のサブパスを終了します。\n例えば次のコードでは、20pxから120ピクセルまでの範囲で黒から白へ、垂直方向のグラデーションを定義して、それを適用した四角形を描画します:\n\n     myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);",
            "itemtype": "method",
            "name": "beginLinearGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "CSS互換性のあるカラー値の配列。例えば[\"#F00\", \"#00F\"]は、赤から青へのグラデーション描画を定義します。",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "色に対応するグラデーションポイントの配列。例えば、[0.1, 0.9]は最初の色が10%、2番目の色が90%になるよう補完します。",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "グラデーション方向と大きさを定義する線の、最初の点の位置。",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "グラデーション方向と大きさを定義する線の、最初の点の位置。",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "グラデーション方向と大きさを定義する線の、二番目の点の位置。",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "グラデーション方向と大きさを定義する線の、二番目の点の位置。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 578,
            "description": "放射状グラデーションの塗りを開始します。このメソッドは、現在のサブパスを終了します。\n例えば次のコードは、50の半径と、中心点が(100, 100)で赤から青への放射状グラデーションを定義し、それを適用した円を描画します:\n\n     myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);",
            "itemtype": "method",
            "name": "beginRadialGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "CSS互換性のあるカラー値の配列。例えば[\"#F00\", \"#00F\"]は、赤から青へのグラデーション描画を定義します。",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "色に対応するグラデーションポイントの配列。例えば、[0.1, 0.9]は最初の色が10%、2番目の色が90%になるよう補完します。",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "グラデーションを定義する内側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "グラデーションを定義する内側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "グラデーションを定義する内側の円の半径。",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "グラデーションを定義する外側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "グラデーションを定義する外側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "グラデーションを定義する外側の円の半径。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 605,
            "description": "指定された画像を使用した、パターンの塗りつぶしを開始します。このメソッドは、現在のサブパスを終了します。",
            "itemtype": "method",
            "name": "beginBitmapFill",
            "params": [
                {
                    "name": "image",
                    "description": "パターンに使用する、Image、Canvas、またはVideoオブジェクト。",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "(オプション) 塗りつぶし領域内で、画像を繰り返すかどうかを示します。\"repeat\"、\"repeat-x\"、\"repeat-y\"、\nまたは\"no-repeat\"のうち一つです。デフォルト値は\"repeat\"です。",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "(オプション) ビットマップの塗りのための変換行列を指定します。この変換は、親の変換に対して相対的に適用されます。",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 635,
            "description": "現在のサブパスを終了し、塗りなしで新規に開始します。機能的に<code>beginFill(null)</code>と同じです。",
            "itemtype": "method",
            "name": "endFill",
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 644,
            "description": "現在のサブパスのストロークスタイルを設定します。すべての描画メソッドと同様に、このメソッドは連鎖することができるので、\n以下のように一行のコードでストロークスタイルと色を定義することができます。\n\n     myGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");",
            "itemtype": "method",
            "name": "setStrokeStyle",
            "params": [
                {
                    "name": "thickness",
                    "description": "ストロークの幅",
                    "type": "Number"
                },
                {
                    "name": "caps",
                    "description": "線端の種類を示します。\"butt\"(なし)、\"round\"(丸型)、\"square\"(角型)のうち一つです。デフォルト値は\"butt\"です。\n短縮版APIでは0(なし)、1(丸型)、2(角型)の数値でも指定できます。",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "joints",
                    "description": "2本の線が交差した場合に使用される、結合タイプを指定します。\n\"bevel\"(ベベル)、\"round\"(ラウンド)、\"miter\"(マイター)のうち一つです。デフォルト値は\"マイター\"です。\n短縮版APIでは0(マイター)、1(ラウンド)、2(ベベル)の数値でも指定できます。",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "miterLimit",
                    "description": "結合タイプが\"miter\"に設定されている場合、マイターのしきい値を指定して、\nどの位置でマイターの結合部分がクリップされるかを制御することができます。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "ignoreScale",
                    "description": "trueの場合、現在有効な変換に関係なく、指定した太さでストロークが描画されます。",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 674,
            "description": "指定した色でストロークを開始します。このメソッドは、現在のサブパスを終了します。",
            "itemtype": "method",
            "name": "beginStroke",
            "params": [
                {
                    "name": "color",
                    "description": "CSS互換性のある色の値（例：\"＃FF0000\"、\"red\"、 または \"RGBA(255,0,0,0.5)\"）。\nnullに設定すると、ストロークなしになります。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 687,
            "description": "(x0, y0)から(x1, y1)の線で定義された、線形グラデーションのストロークを開始します。このメソッドは現在のサブパスを終了します。\n例えば次のコードでは、20pxから120ピクセルまでの範囲で黒から白へ、垂直方向のグラデーションを定義して、それを適用した四角形を描画します:\n\n     myGraphics.setStrokeStyle(10).beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);",
            "itemtype": "method",
            "name": "beginLinearGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "CSS互換性のあるカラー値の配列。例えば[\"#F00\", \"#00F\"]は、赤から青へのグラデーション描画を定義します。",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "色に対応するグラデーションポイントの配列。例えば、[0.1, 0.9]は最初の色が10%、2番目の色が90%になるよう補完します。",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "グラデーション方向と大きさを定義する線の、最初の点の位置。",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "グラデーション方向と大きさを定義する線の、最初の点の位置。",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "グラデーション方向と大きさを定義する線の、二番目の点の位置。",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "グラデーション方向と大きさを定義する線の、二番目の点の位置。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 713,
            "description": "放射状グラデーションのストロークを開始します。このメソッドは、現在のサブパスを終了します。\n例えば次のコードは、50の半径と、中心点が(100, 100)で赤から青への放射状グラデーションを定義し、それを適用した円を描画します:\n\n     myGraphics.setStrokeStyle(10)\n         .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n         .drawRect(50, 90, 150, 110);",
            "itemtype": "method",
            "name": "beginRadialGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "CSS互換性のあるカラー値の配列。例えば[\"#F00\", \"#00F\"]は、赤から青へのグラデーション描画を定義します。",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "色に対応するグラデーションポイントの配列。例えば、[0.1, 0.9]は最初の色が10%、2番目の色が90%になるよう補完します。",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "グラデーションを定義する内側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "グラデーションを定義する内側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "グラデーションを定義する内側の円の半径。",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "グラデーションを定義する外側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "グラデーションを定義する外側の円の中心点。",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "グラデーションを定義する外側の円の半径。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 742,
            "description": "指定した画像を使用した、パターンのストロークを開始します。このメソッドは現在のサブパスを終了します。ビットマップの塗りと違い、現在のキャンバスAPIの制限のため、\nストロークはmatrixパラメータをサポートしていないことに注意してください。",
            "itemtype": "method",
            "name": "beginBitmapStroke",
            "params": [
                {
                    "name": "image",
                    "description": "パターンに使用する、Image、Canvas、またはVideoオブジェクト。",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "(オプション) 塗りつぶし領域内で、画像を繰り返すかどうかを示します。\"repeat\"、\"repeat-x\"、\"repeat-y\"、\nまたは\"no-repeat\"のうち一つです。デフォルト値は\"repeat\"です。",
                    "type": "String",
                    "optional": true,
                    "optdefault": "repeat"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 759,
            "description": "現在のサブパスを終了し、ストロークなしで新規に開始します。機能的に<code>beginStroke(null)</code>と同じです。",
            "itemtype": "method",
            "name": "endStroke",
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 769,
            "description": "慣れ親しんだActionScriptの<code>curveTo()</code>メソッドに対応します。機能的には{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}と同じです。\nmethod.",
            "itemtype": "method",
            "name": "curveTo",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 777,
            "description": "慣れ親しんだActionScriptの<code>drawRect()</code>メソッドに対応します。機能的には{{#crossLink \"Graphics/rect\"}}{{/crossLink}}と同じです。\nmethod.",
            "itemtype": "method",
            "name": "drawRect",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 785,
            "description": "全ての角を指定された半径で丸めた、角丸の四角形を描画します。",
            "itemtype": "method",
            "name": "drawRoundRect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "角丸の半径。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 800,
            "description": "それぞれの角を個別の半径で丸めた、角丸の四角形を描画します。角丸の半径は正負の値に対応します。",
            "itemtype": "method",
            "name": "drawRoundRectComplex",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radiusTL",
                    "description": "左上の角丸の半径。",
                    "type": "Number"
                },
                {
                    "name": "radiusTR",
                    "description": "右上の角丸の半径。",
                    "type": "Number"
                },
                {
                    "name": "radiusBR",
                    "description": "右下の角丸の半径。",
                    "type": "Number"
                },
                {
                    "name": "radiusBL",
                    "description": "左下の角丸の半径。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 841,
            "description": "指定された半径と（x、y）により円を描画します。\n\n     var g = new Graphics();\n\t    g.setStrokeStyle(1);\n\t    g.beginStroke(Graphics.getRGB(0,0,0));\n\t    g.beginFill(Graphics.getRGB(255,0,0));\n\t    g.drawCircle(0,0,3);\n\n\t    var s = new Shape(g);\n\t\ts.x = 100;\n\t\ts.y = 100;\n\n\t    stage.addChild(s);\n\t    stage.update();",
            "itemtype": "method",
            "name": "drawCircle",
            "params": [
                {
                    "name": "x",
                    "description": "円の中心点のx座標",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "円の中心点のy座標",
                    "type": "Number"
                },
                {
                    "name": "円の半径",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 868,
            "description": "指定された幅(w)と高さ(h)で楕円（オーバル）を描画します。\n幅と高さが異なる値にできることを除き、{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}と同じです。",
            "itemtype": "method",
            "name": "drawEllipse",
            "params": [
                {
                    "name": "x",
                    "description": "楕円の中心点のx座標",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "楕円の中心点のy座標",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "楕円の幅（水平方向の直径）。水平方向の半径は、この数値の半分になります。",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "楕円の高さ（垂直方向の直径）。垂直方向の半径は、この数値の半分になります。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicsインスタンス（連鎖した呼び出しに有用）。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 898,
            "description": "ポイントサイズが0より大きい場合は星型、またはポイントサイズが0である場合は指定した頂点数の正多角形を描画します。\n例えば、次のコードでは中心が100、100、半径が50の、慣れ親しんだ五芒星のシェイプを描画します：\n     myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n     // 注意: -90では最初の点が垂直になります",
            "itemtype": "method",
            "name": "drawPolyStar",
            "params": [
                {
                    "name": "シェイプの中心のx座標。",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "シェイプの中心のy座標。",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "シェイプの外半径。",
                    "type": "Number"
                },
                {
                    "name": "sides",
                    "description": "星、または多角形の側面にある点の数。",
                    "type": "Number"
                },
                {
                    "name": "pointSize",
                    "description": "星の各点の尖り具合（谷）の深さ。pointSizeが0の場合、正多角形が描画されます(谷がない), pointSizeが1の場合、無限に尖っていることになるため、なにも描画されません。",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "最初の点/コーナーの角度。 例えば0の場合は、中央の右側にある最初の点が直接描画されます。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicインスタンス (連鎖した呼び出しに有用)。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 933,
            "description": "圧縮されたエンコードパスの文字列を、連続した描画命令にデコードします。\nこのフォーマットは人間が読み取ることを意図しておらず、オーサリングツールで使用されます。\nこのフォーマットではbase64文字セットを使用しています。各文字は連続する描画命令を定義するための6ビット文字に変換されます。\n\n各コマンドは、単一の\"ヘッダー\"文字と、それに続くxおよびy座標の値を交互に繋げた変数から構成された文字列に圧縮されます。\nヘッダービットは左から右へ読みます(ほとんどの場合は右端ビットまで):1～3ビットは、操作の種類を指定します。\n(0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 未使用)\nビット4は座標の値に12ビット（2文字）または18ビット(3文字)のどちらを使用するかを示します。5と6のビットは現在未使用です。\n\nヘッダに続くのは、0（closePath）、2（moveTo, LINETO）、4（quadraticCurveTo）、または6（bezierCurveTo）のパラメータです。\nこれらのパラメータは、2または3文字によって表される（コマンド文字のビット4で示されます）、x/y座標を交互に並べたものです。\nこれらの文字は、1ビットの符号（1は負、0が正）と、それに続く11（2文字）または17（3文字）ビットの整数値から構成されています。\n全ての座標値は、1ピクセルの1/10の単位です。\n絶対値による移動操作の場合を除き、この値は、以前のxまたはy位置からの相対値です（適切なものが選択されます）。\n\n例えば、\"A3cAAMAu4AAA\"の文字列は、-150,0から始まり150,0で終わる直線を表します。\n<br />A - bits 000000. 最初の3ビット(000)はmoveTo命令を示します。ビット4(0)はパラメータごとに2文字であることを示します。\n<br />3c - 110111011100. xの絶対値は-150.0pxです。最初のビットは負の値であることを示し、残りのビット列は1ピクセルの1/10の単位で1500であることを示します。\n<br />AA - 000000000000. yの絶対座標は0です。\n<br />I - 001100. 最初の3ビット(001)はlineTo命令を示します。ビット4(1)はパラメータごとに3文字であることを示します。\n<br />Au4 - 000000101110111000. xの相対値は300.0pxです。これは前のx座標である-150.0pxに加算され、絶対座標では+150.0pxになります。\n<br />AAA - 000000000000000000. yの相対値は0です。",
            "itemtype": "method",
            "name": "decodePath",
            "params": [
                {
                    "name": "str",
                    "description": "デコードするパス文字列。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "メソッドが呼び出されたGraphicインスタンス (連鎖した呼び出しに有用)。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 997,
            "description": "Graphicsインスタンスの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在のGraphicsインスタンスの複製。",
                "type": "Graphics"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1015,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このインスタンスの文字列表現。",
                "type": "String"
            },
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1026,
            "itemtype": "method",
            "name": "mt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1033,
            "itemtype": "method",
            "name": "lt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1040,
            "itemtype": "method",
            "name": "at",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1047,
            "itemtype": "method",
            "name": "bt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1054,
            "itemtype": "method",
            "name": "qt",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1061,
            "itemtype": "method",
            "name": "a",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1068,
            "itemtype": "method",
            "name": "r",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1075,
            "itemtype": "method",
            "name": "cp",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1082,
            "itemtype": "method",
            "name": "c",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1089,
            "itemtype": "method",
            "name": "f",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1096,
            "itemtype": "method",
            "name": "lf",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1103,
            "itemtype": "method",
            "name": "rf",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1110,
            "itemtype": "method",
            "name": "bf",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1117,
            "itemtype": "method",
            "name": "ef",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1124,
            "itemtype": "method",
            "name": "ss",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1131,
            "itemtype": "method",
            "name": "s",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1138,
            "itemtype": "method",
            "name": "ls",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1145,
            "itemtype": "method",
            "name": "rs",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1152,
            "itemtype": "method",
            "name": "bs",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1159,
            "itemtype": "method",
            "name": "es",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1166,
            "itemtype": "method",
            "name": "dr",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1173,
            "itemtype": "method",
            "name": "rr",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1180,
            "itemtype": "method",
            "name": "rc",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1187,
            "itemtype": "method",
            "name": "dc",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1194,
            "itemtype": "method",
            "name": "de",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1201,
            "itemtype": "method",
            "name": "dp",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1208,
            "itemtype": "method",
            "name": "p",
            "access": "protected",
            "tagname": "t@ype Function",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1217,
            "itemtype": "method",
            "name": "_updateInstructions",
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1246,
            "itemtype": "method",
            "name": "_newPath",
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Graphics.js",
            "line": 1258,
            "description": "プロパティを設定するコマンドの作成に使用します",
            "itemtype": "method",
            "name": "_setProp",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 57,
            "description": "リードオンリー。 MovieClipは、たとえ親がポーズしていても、親と独立して進みます。\nこれは、ディフォルトモードです。",
            "itemtype": "property",
            "name": "INDEPENDENT",
            "static": 1,
            "type": "String",
            "default": "\"independent\"",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 67,
            "description": "リードオンリー。MovieClipは、（startPositionプロパティで決定された）単一のフレームしか表示しません。",
            "itemtype": "property",
            "name": "SINGLE_FRAME",
            "static": 1,
            "type": "String",
            "default": "\"single\"",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 76,
            "description": "リードオンリー。MovieClipは、親が進むとき、進められるのみで、親MovieClipの位置と同期されます。",
            "itemtype": "property",
            "name": "SYNCHED",
            "static": 1,
            "type": "String",
            "default": "\"synched\"",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 87,
            "description": "このMovieClipがどのようにその時間を進行するかを制御します。0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED)\nのうちのいずれかにする必要があります。ふるまいの説明は、それぞれの定数を参照してください。",
            "itemtype": "property",
            "name": "mode",
            "type": "String",
            "default": "null",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 96,
            "description": "このムービークリップで最初のフレームとして何を再生するか、もしくはモードがSINGLE_FRAMEの場合、表示のための\nフレームのみかを指定します。",
            "itemtype": "property",
            "name": "startPosition",
            "type": "Number",
            "default": "0",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 105,
            "description": "このMovieClipがそのタイムラインの終わりに到達した際にループすべきかどうかを示します。",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "default": "true",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 113,
            "description": "リードオンリー。ムービークリップの現在のフレーム。",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 120,
            "description": "このMovieClipに関連づけられているTweenJSタイムライン。これは、MovieClipインスタンスが初期化されるときに\n自動的に作成されます。",
            "itemtype": "property",
            "name": "timeline",
            "type": "Timeline",
            "default": "null",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 129,
            "description": "もし trueならば、MovieClipの位置はtickによって進行しません。",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 137,
            "description": "もし trueならば、このMovieClipのツゥイーン上のアクションは、再生ヘッドが進行するときに実行されます。",
            "itemtype": "property",
            "name": "actionsEnabled",
            "type": "Boolean",
            "default": "true",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 145,
            "description": "もし trueならば、MovieClipはタイムラインがディスプレイリストに追加するときはいつでも、自動的に\n先頭フレームにリセットされます。これは、mode=INDEPENDENTのMovieClipにのみ適用します。\n<br><br>\nたとえば、子MovieClipインスタンスのボディと、各フレームで異なるコスチュームを持つキャラクタアニメーション\nがあるとすると、自動的にリセットされることを気にかけず、フレームをマニュアルで変更できるように、\nbody.autoReset = falseにセットします。",
            "itemtype": "property",
            "name": "autoReset",
            "type": "Boolean",
            "default": "true",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 162,
            "itemtype": "property",
            "name": "_synchOffset",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 170,
            "itemtype": "property",
            "name": "_prevPos",
            "type": "Number",
            "default": "-1",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 178,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 186,
            "description": "MovieClipによって積極的に管理されるディスプレイオブジェクトのリスト",
            "itemtype": "property",
            "name": "_managed",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 196,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 203,
            "description": "コンストラクタに呼び出される初期化メソッド。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 219,
            "description": "キャンバスに描かれた場合、表示オブジェクトが可視かどうかを示すtrueもしくはfalseを返します。\nこれは、ステージの境界内に表示されるかどうかを考慮することはありません。\nNOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "キャンバスに描かれた場合に、表示オブジェクトが可視かどうかを示すブール値",
                "type": "Boolean"
            },
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 231,
            "itemtype": "property",
            "name": "Container_draw",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 238,
            "description": "指定されたコンテキストに、visible, alpha, shadow, transformを無視して描画します。\n描画が処理された場合はtrueを返します（オーバーライド機能に便利）。\nNOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "描きこむキャンバス2Dコンテキスト。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画操作が現在のキャッシュを無視するかどうかを指定します。\nたとえば、キャッシュを描画するために使用されます（自身に戻って単に既存キャッシュを描画することを防ぐために）。",
                    "type": "Boolean"
                }
            ],
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 255,
            "description": "pausedをfalseにセットします。",
            "itemtype": "method",
            "name": "play",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 263,
            "description": "pausedをtrueにセットします。",
            "itemtype": "method",
            "name": "stop",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 271,
            "description": "このムービークリップを指定した位置もしくはラベルに進めて、pausedをfalseにセットします。",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 281,
            "description": "このムービークリップを指定した位置もしくはラベルに進めて、pausedをtrueにセットします。",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 291,
            "description": "MovieClipインスタンスはクローンできません。",
            "itemtype": "method",
            "name": "clone",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 300,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスの文字列表現。",
                "type": "String"
            },
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 311,
            "itemtype": "property",
            "name": "Container__tick",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 318,
            "itemtype": "method",
            "name": "_tick",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 329,
            "itemtype": "method",
            "name": "_goto",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 342,
            "itemtype": "method",
            "name": "_reset",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 351,
            "itemtype": "method",
            "name": "_updateTimeline",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 402,
            "itemtype": "method",
            "name": "_setState",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 417,
            "description": "タイムラインに子を追加し、管理された子としてセットします。",
            "itemtype": "method",
            "name": "_addManagedChild",
            "access": "private",
            "tagname": "",
            "class": "MovieClip",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 449,
            "itemtype": "method",
            "name": "priority",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 455,
            "itemtype": "method",
            "name": "install",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 463,
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 471,
            "itemtype": "method",
            "name": "step",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/MovieClip.js",
            "line": 479,
            "itemtype": "method",
            "name": "tween",
            "access": "private",
            "tagname": "",
            "class": "MovieClipPlugin",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 53,
            "description": "shadowオブジェクト識別 (全てのプロパティは0に設定). 読み取り専用",
            "itemtype": "property",
            "name": "identity",
            "type": "Shadow",
            "static": 1,
            "final": 1,
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 63,
            "description": "property color",
            "type": "String",
            "default": "null",
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 70,
            "description": "property offsetX",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 77,
            "description": "property offsetY",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 84,
            "description": "property blur",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 92,
            "description": "初期化メソッド",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "color",
                    "description": "影の色",
                    "type": "String"
                },
                {
                    "name": "offsetX",
                    "description": "影のX軸のオフセット",
                    "type": "Number"
                },
                {
                    "name": "offsetY",
                    "description": "影のY軸のオフセット",
                    "type": "Number"
                },
                {
                    "name": "blur",
                    "description": "ブラー効果のサイズ",
                    "type": "Number"
                }
            ],
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 109,
            "description": "本オブジェクトを文字列で表現したものを返却する",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスを文字列で表現したもの",
                "type": "String"
            },
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shadow.js",
            "line": 119,
            "description": "本Shadowインスタンスのクローンを返却する",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在のShadowインスタンスのクローン",
                "type": "Shadow"
            },
            "class": "Shadow",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 61,
            "description": "表示のためのグラフィックスインタフェース。",
            "itemtype": "property",
            "name": "graphics",
            "type": "Graphics",
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 69,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "access": "private",
            "tagname": "",
            "type": "Function",
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 76,
            "description": "初期化メソッド。",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "graphics",
                    "description": "",
                    "type": "Graphics"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 87,
            "description": "キャンバスに描かれる際にShapeが可視かどうかを示すブール値を返します。これは、ステージの境界内に\n可視かどうかを考慮することはありません\nNOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "キャンバスに描かれる際にShapeが可視かどうかを示すブール値。",
                "type": "Boolean"
            },
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 99,
            "itemtype": "property",
            "name": "DisplayObject_draw",
            "access": "private",
            "tagname": "",
            "type": "Function",
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 106,
            "description": "指定されたコンテキストに、visible, alpha, shadow, transformを無視してShapeを描画します。\n描画が処理された場合はtrueを返します（オーバーライド機能に便利）。\n\n<i>NOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。</i>",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "描きこむキャンバス2Dコンテキスト。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画操作が現在のキャッシュを無視するかどうかを指定します。 \nたとえば、キャッシュを描画するために使用されます（自身に戻って単に既存キャッシュを描画することを防ぐために）。",
                    "type": "Boolean"
                }
            ],
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 122,
            "description": "このShapeのクローンを返します。このインスタンスの現在のコンテキストに指定されたいくつかのプロパティは\nディフォルトに戻されます（例 .parent）",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "recursive",
                    "description": "trueなら、このShapeの {{#crossLink \"Graphics\"}}{{/crossLink}} インスタンスもクローンされます。\nfalseなら、グラフィックスインタフェースは、新しいShapeと共有されます。",
                    "type": "Boolean"
                }
            ],
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Shape.js",
            "line": 135,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスの文字列表現。",
                "type": "String"
            },
            "class": "Shape",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 131,
            "description": "すべてのイメージがロードされるときに発行されます。スプライトシートが初期化されるときにイメージが完全に\nロードされない場合は、これは発火(fire)だけすることに注意してください。前もってリスナを追加することで、complete\nプロパティをチェックすべきです。例\n<pre><code>var sheet = new SpriteSheet(data);\nif (!sheet.complete) {\n &nbsp; // not preloaded, listen for onComplete:\n &nbsp; sheet.addEventListener(\"complete\", handler);\n}</code></pre>",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "イベントが発行されるオブジェクト。",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "イベントタイプ。",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 147,
            "description": "すべてのイメージのロードが完了したかどうかを示すリードオンリーのプロパティ。",
            "itemtype": "property",
            "name": "complete",
            "type": "Boolean",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 155,
            "description": "onCompleteコールバックは、すべてのイメージがロードされたときにコールされます。スプライトシートが初期化されるときに\nイメージが完全にロードされない場合は、これは発火(fire)だけすることに注意してください。前もってonCompleteハンドラを\n追加することで、completeプロパティをチェックすべきです。例\n<pre><code>var sheet = new SpriteSheet(data);\nif (!sheet.complete) {\n &nbsp; // not preloaded, listen for onComplete:\n &nbsp; sheet.onComplete = handler;\n}</code></pre>",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"complete\"イベントを支持して。将来のバージョンでは削除される。",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 181,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 187,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 193,
            "itemtype": "property",
            "name": "_images",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 199,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 205,
            "itemtype": "property",
            "name": "_loadCount",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 212,
            "itemtype": "property",
            "name": "_frameHeight",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 218,
            "itemtype": "property",
            "name": "_frameWidth",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 224,
            "itemtype": "property",
            "name": "_numFrames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 230,
            "itemtype": "property",
            "name": "_regX",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 236,
            "itemtype": "property",
            "name": "_regY",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 243,
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 325,
            "description": "指定されたアニメーションにおけるトータルのフレーム数を返します。もしくは、animationパラメータが\n除外された場合はすべてのスプライトシートにおける数を返します。",
            "itemtype": "method",
            "name": "getNumFrames",
            "params": [
                {
                    "name": "animation",
                    "description": "フレーム数を取得するアニメーションの名前。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "アニメーションにおけるフレーム数、もしくは、animationパラメータが除外された場合は、すべてのスプライトシートにおける数。",
                "type": "Number"
            },
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 342,
            "description": "文字列としてのすべての利用可能なアニメーション名の配列を返します。",
            "itemtype": "method",
            "name": "getAnimations",
            "return": {
                "description": "このスプライトシート上で利用可能なアニメーション名の配列。",
                "type": "Array"
            },
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 351,
            "description": "指定されたアニメーションを定義するオブジェクトを返します。返されたオブジェクトは、\nアニメーションにおけるフレームidの配列を含むframesプロパティ、このアニメーションを\n進める頻度を示すfrequencyプロパティ、nameプロパティ、ディフォルトの次のアニメーションを\n支持するnextプロパティを持っています。アニメーションがループするなら、nameとnextプロパティ\nは、同じになります。",
            "itemtype": "method",
            "name": "getAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "取得するアニメーションの名前。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "frames, frequency, name, nextプロパティを持つ汎用オブジェクト。",
                "type": "Object"
            },
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 365,
            "description": "イメージと指定されたフレームの元の矩形を示すオブジェクトを返します。返されたオブジェクトは、\n見つかったフレームにおけるimageオブジェクトへの参照を持つimageプロパティを持っており、\nそのイメージ内のフレームの境界を定義するRectangleインスタンスを含むrectプロパティを持っています。",
            "itemtype": "method",
            "name": "getFrame",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "フレームのインデックス。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "imageとrectプロパティを持つ汎用オブジェクト。フレームが存在しない場合、もしくはイメージが完全にロードされていない場合は、nullを返します。",
                "type": "Object"
            },
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 379,
            "description": "その開始位置に対して指定されたフレームの境界を定義するRectangleインスタンスを返します。たとえば、regX 50、regY 40で\n90 x 70のフレームは、[x=-50, y=-40, width=90, height=70]の矩形を返します。",
            "itemtype": "method",
            "name": "getFrameBounds",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "フレームのインデックス。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Rectangleインスタンス。フレームが存在しない場合、もしくはイメージが完全にロードされていない場合は、nullを返します。",
                "type": "Rectangle"
            },
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 391,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスの文字列表現。",
                "type": "String"
            },
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 400,
            "description": "SpriteSheetインスタンスのクローンを返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "SpriteSheetインスタンスのクローン。",
                "type": "SpriteSheet"
            },
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 421,
            "itemtype": "method",
            "name": "_handleImageLoad",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/SpriteSheet.js",
            "line": 434,
            "itemtype": "method",
            "name": "_calculateFrames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 62,
            "itemtype": "property",
            "name": "_snapToPixelEnabled",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "deprecated": true,
            "deprecationMessage": "モダンブラウザでのハードウェアアクセラレーションは、これを不要にします。",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 73,
            "description": "ユーザがキャンバス上をマウスを移動させるとき、発行されます。\neventプロパティのリストのために {{#crossLink \"MouseEvent\"}}{{/crossLink}} クラスを参照してください。",
            "itemtype": "event",
            "name": "stagemousemove",
            "since": "0.6.0",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 80,
            "description": "ユーザが、ページが検出できる場所でマウスボタンを離したとき、発行されます（これはブラウザ間で若干違います）。\neventプロパティのリストのために {{#crossLink \"MouseEvent\"}}{{/crossLink}} クラスを参照してください。",
            "itemtype": "event",
            "name": "stagemouseup",
            "since": "0.6.0",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 87,
            "description": "ユーザが、ページが検出できる場所でマウスボタンを離したとき、発行されます（これはブラウザ間で若干違います）。\neventプロパティのリストのために {{#crossLink \"MouseEvent\"}}{{/crossLink}} クラスを参照してください。",
            "itemtype": "event",
            "name": "stagemouseup",
            "since": "0.6.0",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 95,
            "description": "ステージが、それぞれの描画の前に、自動的にキャンバスをクリアすべきかどうかを示します。手動的にクリアを制御するために、\nこれをfalseにセットすることができます（たとえば、生成アートのために、もしくは同じキャンバスで複数のステージを指すときに）。",
            "itemtype": "property",
            "name": "autoClear",
            "type": "Boolean",
            "default": "true",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 104,
            "description": "キャンバスのステージは、描画します。複数ステージは、単一のキャンバスを共有します。しかし、tickされる最初のステージにも関わらず、\nautoClearを無効にしなければなりません（もしくは、お互いの描画をクリアします）。",
            "itemtype": "property",
            "name": "canvas",
            "type": "HTMLCanvasElement | Object",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 112,
            "description": "リードオンリー。現在のマウスのキャンバス上のX座標。マウスがキャンバスを離れるなら、これはキャンバス上での最も最近の位置を\n示し、mouseInBoundsはfalseにセットされます。",
            "itemtype": "property",
            "name": "mouseX",
            "type": "Number",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 120,
            "description": "リードオンリー。現在のマウスのキャンバス上のY座標。マウスがキャンバスを離れるなら、これはキャンバス上での最も最近の位置を\n示し、mouseInBoundsはfalseにセットされます。",
            "itemtype": "property",
            "name": "mouseY",
            "type": "Number",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 128,
            "description": "onMouseMoveコールバックは、ユーザがキャンバス上でマウスを動かすときに呼び出されます。そのハンドラは、対応するMouseEventインスタンスを\n含む単一のパラメータを渡されます。",
            "itemtype": "property",
            "name": "onMouseMove",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"stagemousemove\"を支持して。将来のバージョンで削除されます。",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 137,
            "description": "onMouseUpコールバックは、ユーザが、ページが検出できる場所でマウスボタンを離したときに呼び出されます。そのハンドラは、対応するMouseEventインスタンスを\n含む単一のパラメータを渡されます。",
            "itemtype": "property",
            "name": "onMouseUp",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"stagemousemove\"を支持して。将来のバージョンで削除されます。",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 146,
            "description": "onMouseDownコールバックは、ユーザが、キャンバス上でマウスボタンを押したときに呼び出されます。そのハンドラは、対応するMouseEventインスタンスを\n含む単一のパラメータを渡されます。",
            "itemtype": "property",
            "name": "onMouseDown",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"stagemousemove\"を支持して。将来のバージョンで削除されます。",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 155,
            "description": "ステージが、それらを描画するときにディスプレイオブジェクトのsnapToPixelプロパティを使用すべきかどうかを示します。\n詳細は、DisplayObject.snapToPixelを参照してください。",
            "itemtype": "property",
            "name": "snapToPixelEnabled",
            "type": "Boolean",
            "default": "false",
            "deprecated": true,
            "deprecationMessage": "ハードウェアアクセラレーションは、これを有益でなくします。",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 165,
            "description": "マウスが現在、キャンバスの境界内にあるかどうかを示します。",
            "itemtype": "property",
            "name": "mouseInBounds",
            "type": "Boolean",
            "default": "false",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 173,
            "description": "trueなら、tickコールバックはキャンバスへの描画に先だって、ステージ上のすべてのディスプレイオブジェクト上で呼び出されます。",
            "itemtype": "property",
            "name": "tickOnUpdate",
            "type": "Boolean",
            "default": "true",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 181,
            "description": "trueなら、マウスムーブイベントは、マウスがターゲットキャンバスを離れる際に呼ばれ続けます。\nmouseInBoundsそして MouseEvent.x/y/rawX/rawYを参照してください。",
            "itemtype": "property",
            "name": "mouseMoveOutside",
            "type": "Boolean",
            "default": "false",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 190,
            "description": "hitAreaプロパティは、ステージのためにはサポートされていません。",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 199,
            "description": "各アクティブポインタidのためにデータと共にオブジェクトを保持します。各オブジェクトは次のプロパティを持っています:\nx, y, event, target, overTarget, overX, overY, inBounds",
            "itemtype": "property",
            "name": "_pointerData",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 208,
            "description": "アクティブポインタの数",
            "itemtype": "property",
            "name": "_pointerCount",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 216,
            "description": "アクティブポインタの数",
            "itemtype": "property",
            "name": "_pointerCount",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 224,
            "itemtype": "property",
            "name": "_mouseOverIntervalID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 232,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 239,
            "description": "初期化メソッド",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "canvas",
                    "description": "キャンバスオブジェクト、もしくは現在のドキュメントでのキャンバスオブジェクトの文字列id",
                    "type": "HTMLCanvasElement | String | Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 254,
            "description": "updateメソッドが呼ばれるたび、ステージは、tickメソッドを露出している子孫をtickし（例. {{#crossLink \"BitmapAnimation\"}}{{/crossLink}})、\nキャンバスの全体のディスプレイリストを描画します。更新のために渡されるパラメータは、各onTickハンドラに渡されます。",
            "itemtype": "method",
            "name": "update",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 271,
            "description": "updateメソッドを呼び出します。 {{#crossLink \"Ticker\"}}{{/crossLink}} に直接リスナとしてステージを追加することは有用です。",
            "itemtype": "property",
            "name": "tick",
            "deprecated": true,
            "deprecationMessage": "handleEventと共にTicker.addEventListenerを使うことを支持して。",
            "type": "Function",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 279,
            "description": "\"tick\"イベントを受け取ったとき、Stage.update() を呼び出すディフォルトイベントハンドラ。これは、以下を使うことで、\n直接 {{#crossLink \"Ticker\"}}{{/crossLink}} 上でイベントリスナとして Stageインスタンスを登録することを許します。\n\n     Ticker.addEventListener(\"tick\", myStage\");\n\nこのパターンを使ってtickにサブスクライブする場合、tickイベントオブジェクトは、deltaとpausedパラメータの代わりに、\nディスプレイオブジェクトtickハンドラを通して渡されることに注意してください。",
            "itemtype": "property",
            "name": "handleEvent",
            "type": "Function",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 294,
            "description": "ターゲットキャンバスをクリアします。<code>autoClear</code> がfalseにセットされているときに有用です。",
            "itemtype": "method",
            "name": "clear",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 305,
            "description": "ステージのコンテンツのBase64でエンコードされたイメージを含むdata urlを返します。返されるdata urlは、イメージエレメントの\nsrc値として指定することができます。",
            "itemtype": "method",
            "name": "toDataURL",
            "params": [
                {
                    "name": "backgroundColor",
                    "description": "生成されたイメージで使用される背景色。HEXカラー、rgbおよびrgbaを含む任意のHTMLカラーの値が\n使用できます。ディフォルト値は、透明背景色です。",
                    "type": "String"
                },
                {
                    "name": "mimeType",
                    "description": "作成されるイメージフォーマットのMIMEタイプ。ディフォルトは、\"image/png\"です。もし、未知のMIMEタイプが\n渡された場合、もしくはブラウザが指定されたMIMEタイプをサポートしないときは、ディフォルト値が使用されます。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Base64でエンコードされたイメージ。",
                "type": "String"
            },
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 361,
            "description": "このステージのディスプレイリストのために、（0のfrequencyを渡すことで）マウスオーバーイベント (mouseover and mouseout) を\n有効もしくは無効にします。これらのイベントは発生させることで高くつくので、ディフォルトでは無効になっていて、イベントの頻度は\n任意の <code>frequency</code> パラメータを介して、独立してマウス移動イベントを制御することができます。",
            "itemtype": "method",
            "name": "enableMouseOver",
            "params": [
                {
                    "name": "frequency",
                    "description": "mouse over/outイベントをブロードキャストする１秒間の最大回数を指定するオプションのパラメータ。\nmouse overイベントを完全に止めるには 0 にセットしてください。最大は、50です。低い frequencyは、低い反応ですが、CPUは軽くなります。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "20"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 380,
            "description": "ステージがDOMエレメント(window, document and canvas)に追加するイベントリスナを有効もしくは無効にします。\nそれは、Stageインスタンスを廃棄するときに無効にする、よいプラクティスです。一方、ステージはページから\nイベントを受け取り続けます。",
            "itemtype": "method",
            "name": "enableDOMEvents",
            "params": [
                {
                    "name": "enable",
                    "description": "イベントを有効にするか無効にするかを指定します。ディフォルトはtrueです。",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 413,
            "description": "このステージのクローンを返します。",
            "return": {
                "description": "現在のContainerインスタンスのクローン。",
                "type": "Stage"
            },
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 423,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスの文字列表現。",
                "type": "String"
            },
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 434,
            "itemtype": "method",
            "name": "_getPointerData",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 449,
            "itemtype": "method",
            "name": "_handleMouseMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 459,
            "itemtype": "method",
            "name": "_handlePointerMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 490,
            "itemtype": "method",
            "name": "_updatePointerPosition",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 525,
            "itemtype": "method",
            "name": "_getElementRect",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 553,
            "itemtype": "method",
            "name": "_handleMouseUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 562,
            "itemtype": "method",
            "name": "_handlePointerUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "clear",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 599,
            "itemtype": "method",
            "name": "_handleMouseDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 608,
            "itemtype": "method",
            "name": "_handlePointerDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 639,
            "itemtype": "method",
            "name": "_testMouseOver",
            "access": "protected",
            "tagname": "",
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Stage.js",
            "line": 677,
            "itemtype": "method",
            "name": "_handleDoubleClick",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Stage",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 64,
            "itemtype": "property",
            "name": "_workingContext",
            "type": "CanvasRenderingContext2D",
            "access": "private",
            "tagname": "",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 72,
            "description": "表示するテキスト。",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 79,
            "description": "使用するフォントスタイル。CSSのfont属性で有効な値が指定できます（例. \"bold 36px Arial\"）。",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 86,
            "description": "テキストに描画する色。 CSSの color属性で有効な値が指定できます（例. \"#F00\"）。ディフォルトは、\"#000\"。",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 93,
            "description": "水平方向のテキストアライメント。\"start\", \"end\", \"left\", \"right\", \"center\"のいずれか。\n詳細は、次を参照 \n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>。 ディフォルトは、\"left\"。",
            "itemtype": "property",
            "name": "textAlign",
            "type": "String",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 103,
            "description": "もしくは\"bottom\"のいずれか。詳細な情報は次を参照\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>。ディフォルトは、\"top\"。",
            "itemtype": "property",
            "name": "textBaseline",
            "type": "String",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 112,
            "description": "縮小されます。詳細な情報は、次を参照\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 121,
            "itemtype": "property",
            "name": "outline",
            "type": "Boolean",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 127,
            "description": "getMeasuredLineHeightの値が使用されます。",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 134,
            "description": "複数行にラップされる前のテキストの１行のための最大幅を示します。nullなら、\nテキストはラップされません。",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Number",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 143,
            "itemtype": "property",
            "name": "DisplayObject_initialize",
            "access": "private",
            "tagname": "",
            "type": "Function",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 150,
            "description": "初期化メソッド。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 162,
            "description": "もし、キャンバスに描画する場合は、ディスプレイオブジェクトが可視かどうかを示すtrueもしくはfalseを返します。\nこれはステージの境界内で可視かどうかを考慮することはありません。\nNOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "キャンバスに描画される場合に、ディスプレイオブジェクトが可視かどうか。",
                "type": "Boolean"
            },
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 174,
            "itemtype": "property",
            "name": "DisplayObject_draw",
            "access": "private",
            "tagname": "",
            "type": "Function",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 181,
            "description": "visible, alpha, shadow, transformを無視して、指定したコンテキストにテキストを描画します。\n描画が処理された場合はtrueを返します（機能性をオーバーライドするのに有用です）。\nNOTE: このメソッドは、高度な目的で使用する場合に有用かも知れませんが、主に内部で使用するためのものです。",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "描画するキャンバス2Dコンテキストオブジェクト。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "描画処理が現在のキャッシュを無視するかどうかを示します。\nたとえば、キャッシュを描画するのに使用されます（それ自身に戻って既存のキャッシュを描画することを防ぐために）。",
                    "type": "Boolean"
                }
            ],
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 203,
            "description": "ラッピングをせずにテキストの測定されたtransformなしの幅を返します。",
            "itemtype": "method",
            "name": "getMeasuredWidth",
            "return": {
                "description": "テキストの測定されたtransformなしの幅。",
                "type": "Number"
            },
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 212,
            "description": "lineHeightプロパティを無視して、テキストのおおよその行の高さを返します。これは、大部分のフォントの\nおおよそのem、文字\"M\"の幅に1.2をかけたものに基づいています。",
            "itemtype": "method",
            "name": "getMeasuredLineHeight",
            "return": {
                "description": "lineHeightプロパティを無視したテキストのおおよその行の高さ。 これは、大部分のフォントの\nおおよそのem、文字\"M\"の幅に1.2をかけたものに基づいています。",
                "type": "Number"
            },
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 223,
            "description": "lineHeight（指定されていれば）もしくはgetMeasuredLineHeight()のいずれかに対して行数をかけて\n複数行のテキストのおおよその高さを返します。この操作は、関連するCPUコストを持っている、テキストの\n流れるロジックが実行する必要があることに注意してください。",
            "itemtype": "method",
            "name": "getMeasuredHeight",
            "return": {
                "description": "描画される複数行のおおよその高さ。",
                "type": "Number"
            },
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 234,
            "description": "テキストインスタンスのクローンを返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "テキストインスタンスのクローン。",
                "type": "Text"
            },
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 245,
            "description": "このオブジェクトの文字列表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスの文字列表現。",
                "type": "String"
            },
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 256,
            "itemtype": "property",
            "name": "DisplayObject_cloneProps",
            "access": "private",
            "tagname": "",
            "type": "Function",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 263,
            "itemtype": "method",
            "name": "cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Text"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 278,
            "itemtype": "method",
            "name": "_getWorkingContext",
            "access": "protected",
            "tagname": "",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 290,
            "description": "複数行のテキストを描画します。",
            "itemtype": "method",
            "name": "_getWorkingContext",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "描画した行数。",
                "type": "Number"
            },
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/display/Text.js",
            "line": 329,
            "itemtype": "method",
            "name": "_drawTextLine",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "Text"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Text",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 74,
            "description": "EventDispatcher のメソッドをミックスインする静的な初期化機能",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "EventDispatcher のメソッドを追加する対象のオブジェクトです。インスタンスと prototype の\nどちらも指定可能です。",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 90,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 98,
            "description": "初期化メソッド",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 106,
            "description": "指定されたイベントリスナを追加します。",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類を文字列で指定します",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "handleEvent メソッドを持つオブジェクト、またはイベントが発行された時に\n呼ばれる関数です",
                    "type": "Function | Object"
                }
            ],
            "return": {
                "description": "listener を連携や代入等の目的に使用できるように返します",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 124,
            "description": "指定されたイベントリスナを削除します。",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類を文字列で指定します。",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "リスナ関数又はオブジェクトです。",
                    "type": "Function | Object"
                }
            ],
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 144,
            "description": "指定された種類、または全ての種類に対して関連付けられたリスナを全て削除します。",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類を指定します。省略すると全ての種類に対応する全てのリスナが削除されます。",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 154,
            "description": "指定されたイベントを発行します。",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "\"type\" プロパティを持つオブジェクト、もしくは種類を指定する文字列です。\ndispatchEvent  \"type\" と \"params\" プロパティを持つ汎用イベントオブジェクトを生成します。",
                    "type": "Object | String"
                },
                {
                    "name": "target",
                    "description": "イベントオブジェクトの target プロパティとして使うオブジェクトです。デフォルト値は\nイベントを発行したオブジェクトです。",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "リスナが 1 つでも true を返したら true になります。",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 180,
            "description": "指定されたイベントの種類に対して 1 つ以上のリスナが存在するかを調べます。",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "イベントの種類を文字列で指定します。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "指定されたイベントのリスナが存在すると true を返します。",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/EventDispatcher.js",
            "line": 191,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスを表現する文字列です。",
                "type": "String"
            },
            "class": "EventDispatcher",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 57,
            "description": "\"mousedown\" の MouseEvent オブジェクトからは、ユーザーがマウスを放すまで mousemove イベントが発行されます。\nこれにより、マウス押下中のマウスの移動を知ることができ、ドラッグ & ドロップ等の実現に役立ちます。\nイベントのプロパティについては {{#crossLink \"MouseEvent\"}}{{/crossLink}} クラスを参照して下さい。",
            "itemtype": "event",
            "name": "mousemove",
            "since": "0.6.0",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 65,
            "description": "\"mousedown\" の MouseEvent オブジェクトからは、ユーザーがマウスを放すと mouseup イベントが発行されます。\nこれにより、特定のマウス押下に対応するマウス解放を知ることができ、ドラッグ & ドロップ等の実現に役立ちます。\nイベントのプロパティについては {{#crossLink \"MouseEvent\"}}{{/crossLink}} クラスを参照して下さい。",
            "itemtype": "event",
            "name": "mouseup",
            "since": "0.6.0",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 75,
            "description": "ステージを基準とする  X 座標です。値の範囲は 0 からステージ幅の範囲内です。",
            "itemtype": "property",
            "name": "stageX",
            "type": "Number",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 82,
            "description": "ステージを基準とする  Y 座標です。値の範囲は 0 からステージの高さの範囲内です。",
            "itemtype": "property",
            "name": "stageY",
            "type": "Number",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 89,
            "description": "ステージを基準とする X 座標です。stage.mouseMoveOutside の値が true でポインターがステージの領域外にある場合\n以外は stageX と同じ値です。",
            "itemtype": "property",
            "name": "rawX",
            "type": "Number",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 97,
            "description": "ステージを基準とする Y 座標です。stage.mouseMoveOutside の値が true でポインターがステージの領域外にある場合\n以外は stageY と同じ値です。",
            "itemtype": "property",
            "name": "rawY",
            "type": "Number",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 105,
            "description": "マウスイベントの種類です。これはハンドラー （onPress, onMouseDown, onMouseUp, onMouseMove,  onClick） \nにマップされるものと同じです。",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 113,
            "description": "ブラウザが生成するネイティブの MouseEvent です。このイベントが持つプロパティと API はブラウザに依存します。\nネイティブの MouseEvent により直接生成されていないときの値は null です。",
            "itemtype": "property",
            "name": "nativeEvent",
            "type": "MouseEvent",
            "default": "null",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 122,
            "description": "\"onPress\" イベントの場合のみ、onMouseMove にハンドラーを指定できます。\nこのハンドラーは、マウスが解放されるまで、マウスが移動すると毎回呼ばれます。\nこれは、ドラッグ & ドロップのような操作に便利です。",
            "itemtype": "property",
            "name": "onMouseMove",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"mousemove\" イベントの追加により、将来のバージョンでは廃止される予定です。",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 132,
            "description": "\"onPress\" イベントの場合のみ、onMouseUp にハンドラーを指定できます。\nこのハンドラーは、マウスが解放されるまで、マウスが移動すると毎回呼ばれます。\nこれは、ドラッグ & ドロップのような操作に便利です。",
            "itemtype": "property",
            "name": "onMouseUp",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"mouseup\" イベントの追加により、将来のバージョンでは廃止される予定です。",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 142,
            "description": "イベントに関連する表示オブジェクトです。",
            "itemtype": "property",
            "name": "target",
            "type": "DisplayObject",
            "default": "null",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 150,
            "description": "ポインター （タッチポイントもしくはカーソル） 固有の ID。値は、マウスの場合 -1 またはシステムからの数値です。",
            "itemtype": "property",
            "name": "pointerID",
            "type": "{Number}",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 157,
            "description": "マルチタッチ環境で最初のポインターかを示します。マウスの場合、常に値は true です。\nタッチの場合、最初にスタックされたポインターが最初のポインターとして扱われます。",
            "itemtype": "property",
            "name": "primary",
            "type": "{Boolean}",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 177,
            "description": "初期化用メソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 195,
            "description": "MouseEvent インスタンスの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "MouseEvent インスタンスの複製です。",
                "type": "MouseEvent"
            },
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/events/MouseEvent.js",
            "line": 204,
            "description": "オブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスを表現する文字列です。",
                "type": "String"
            },
            "class": "MouseEvent",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMapFilter.js",
            "line": 52,
            "class": "AlphaMapFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMapFilter.js",
            "line": 59,
            "description": "結果のアルファ値として使用するグレースケール画像 （又は canvas） です。縦横のサイズは対象と同じにします。",
            "itemtype": "property",
            "name": "alphaMap",
            "type": "Image",
            "class": "AlphaMapFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMapFilter.js",
            "line": 72,
            "description": "フィルターを指定されたコンテキストに適用します。",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "ソースとして使用する 2D コンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "ソースとして使用する矩形の x 座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ソースとして使用する矩形の y 座標です。",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "ソース矩形の幅です。",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "ソース矩形の高さです。",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "オプションです。結果を描く 2D コンテキストです。デフォルトは ctx に渡されたコンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. 結果を描く X 座標です。デフォルトは x に渡された値です。",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. 結果を描く Y 座標です。デフォルトは y に渡された値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AlphaMapFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMapFilter.js",
            "line": 109,
            "description": "このオブジェクトの複製を返します。",
            "return": {
                "description": "現在の AlphaMapFilter インスタンスの複製です。",
                "type": "AlphaMapFilter"
            },
            "class": "AlphaMapFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMapFilter.js",
            "line": 117,
            "description": "このオブジェクトの文字列での表現を返します。",
            "return": {
                "description": "このオブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "AlphaMapFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMaskFilter.js",
            "line": 54,
            "class": "AlphaMaskFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMaskFilter.js",
            "line": 61,
            "description": "マスクとして使用する画像 （又は canvas)",
            "itemtype": "property",
            "name": "mask",
            "type": "Image",
            "class": "AlphaMaskFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMaskFilter.js",
            "line": 70,
            "description": "フィルターを指定されたコンテキストに適用します。重要：現在、このフィルターは targetCtx をサポートしません。",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "ソースとして使用する 2D コンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "ソースとして使用する矩形の x 座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ソースとして使用する矩形の y 座標です。",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "ソース矩形の幅です。",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "ソース矩形の高さです。",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "オプションです。結果を描く 2D コンテキストです。デフォルトは ctx に渡されたコンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. 結果を描く X 座標です。デフォルトは x に渡された値です。",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. 結果を描く Y 座標です。デフォルトは y に渡された値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AlphaMaskFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMaskFilter.js",
            "line": 101,
            "description": "このオブジェクトの複製を返します。",
            "return": {
                "description": "",
                "type": "AlphaMaskFilter"
            },
            "class": "AlphaMaskFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/AlphaMaskFilter.js",
            "line": 109,
            "description": "このオブジェクトの文字列での表現を返します。",
            "return": {
                "description": "このオブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "AlphaMaskFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 51,
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 63,
            "description": "水平方向のぼかしの半径",
            "itemtype": "property",
            "name": "blurX",
            "type": "Number",
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 70,
            "description": "垂直方向のぼかしの半径",
            "itemtype": "property",
            "name": "blurY",
            "type": "Number",
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 77,
            "description": "ぼかし処理を繰り返す回数。例えば、1 を指定すると荒いぼかしになる。\n2 を指定するとより滑らかなぼかしになるが、処理時間は倍になる。",
            "itemtype": "property",
            "name": "quality",
            "type": "Number",
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 86,
            "description": "フィルターの描画に必要なマージンを示す rectangle オブジェクトを返します。\n例えば、描画領域を左に 4 ピクセル、右に 7 ピクセル広げるフィルターの場合\n（ただし上下方向には広がらない）返される rectangle の値は (x=-4, y=0, width=11, height=0) になります。",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "フィルターの描画に必要なマージンを示す rectangle オブジェクトです。",
                "type": "Rectangle"
            },
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 98,
            "description": "指定されたコンテキストにフィルターを適用します。",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "ソースとして使用する 2D コンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "ソースとして使用する矩形の x 座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ソースとして使用する矩形の y 座標です。",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "ソース矩形の幅です。",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "ソース矩形の高さです。",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "オプションです。結果を描く 2D コンテキストです。デフォルトは ctx に渡されたコンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. 結果を描く X 座標です。デフォルトは x に渡された値です。",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. 結果を描く Y 座標です。デフォルトは y に渡された値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 243,
            "description": "このオブジェクトの複製を返します。",
            "return": {
                "description": "",
                "type": "BoxBlurFilter"
            },
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/BoxBlurFilter.js",
            "line": 251,
            "description": "このオブジェクトの文字列での表現を返します。",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "BoxBlurFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 56,
            "description": "赤チャンネルに乗算する値です。",
            "itemtype": "property",
            "name": "redMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 63,
            "description": "緑チャンネルに乗算する値です。",
            "itemtype": "property",
            "name": "greenMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 70,
            "description": "青チャンネルに乗算する値です。",
            "itemtype": "property",
            "name": "blueMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 77,
            "description": "アルファチャンネルに乗算する値です。",
            "itemtype": "property",
            "name": "redMultiplier",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 84,
            "description": "赤チャンネルに加算する値です。（計算後の値に加算されます）",
            "itemtype": "property",
            "name": "redOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 91,
            "description": "緑チャンネルに加算する値です。（計算後の値に加算されます）",
            "itemtype": "property",
            "name": "greenOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 98,
            "description": "青チャンネルに加算する値です。（計算後の値に加算されます）",
            "itemtype": "property",
            "name": "blueOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 105,
            "description": "アルファチャンネルに加算する値です。（計算後の値に加算されます）",
            "itemtype": "property",
            "name": "alphaOffset",
            "type": "Number",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 113,
            "description": "初期化用のメソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 130,
            "description": "指定されたコンテキストにフィルターを適用します。",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "ソースとして使用する 2D コンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "ソースとして使用する矩形の x 座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ソースとして使用する矩形の y 座標です。",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "ソース矩形の幅です。",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "ソース矩形の高さです。",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "オプションです。結果を描く 2D コンテキストです。デフォルトは ctx に渡されたコンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. 結果を描く X 座標です。デフォルトは x に渡された値です。",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. 結果を描く Y 座標です。デフォルトは y に渡された値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 166,
            "description": "このオブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このオブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorFilter.js",
            "line": 176,
            "description": "このオブジェクトの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在の ColorFilter インスタンスの複製です。",
                "type": "ColorFilter"
            },
            "class": "ColorFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 56,
            "description": "コントラスト計算に使用する差分の値の配列",
            "itemtype": "property",
            "name": "DELTA_INDEX",
            "type": "Array",
            "static": 1,
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 76,
            "description": "単位行列",
            "itemtype": "property",
            "name": "IDENTITY_MATRIX",
            "type": "Array",
            "static": 1,
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 90,
            "description": "行列の長さのコンスタントです。",
            "itemtype": "property",
            "name": "LENGTH",
            "type": "Number",
            "static": 1,
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 99,
            "description": "初期化用のメソッドです、",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 110,
            "description": "行列を単位元の値で再初期化します。",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 119,
            "description": "明度、コントラスト、彩度、色相を調整する便利メソッドです。\n同等の操作を行うには、adjustHue(hue), adjustContrast(contrast),\nadjustBrightness(brightness), adjustSaturation(saturation) を、この順に呼びます。",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 136,
            "description": "赤、緑、青の各チャンネルに指定された値を加えて、ピクセル色の明度を調整します。\n正の値は画像を明るくします。負の値は暗くします。",
            "params": [
                {
                    "name": "value",
                    "description": "RGB チャンネルに加える -255 と 255 の間の値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 155,
            "description": "ピクセル色のコントラストを調整します。\n正の値はコントラストを高くします。負の値は低くします。",
            "params": [
                {
                    "name": "value",
                    "description": "-100 と 100 の間の値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 186,
            "description": "ピクセル色の彩度を調整します。\n正の値は彩度を高くします。負の値は低くします（グレースケールに近づきます）。",
            "params": [
                {
                    "name": "-100",
                    "description": "と 100 の間の値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 210,
            "description": "ピクセル色の色相を調整します。",
            "params": [
                {
                    "name": "-180",
                    "description": "& 180 の間の値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 233,
            "description": "指定された配列をこのインスタンスと連結（乗算）します。",
            "params": [
                {
                    "name": "matrix",
                    "description": "ColorMatrix インスタンスの配列です。",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 245,
            "description": "この ColorMatrix の複製を返します。",
            "return": {
                "description": "現在の 現在の ColorFilter インスタンスの複製です。",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 253,
            "description": "この行列の値を含む長さ 25 (5x5) 配列のインスタンスを返します。",
            "return": {
                "description": "この行列の値を持つ配列",
                "type": "Array"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 261,
            "description": "指定された行列の値をこの行列にコピーします。",
            "params": [
                {
                    "name": "matrix",
                    "description": "ColorMatrix インスタンスの配列です。",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "メソッドが呼ばれた ColorMatrix のインスタンスです（呼び出しの連結に便利です）",
                "type": "ColorMatrix"
            },
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 276,
            "itemtype": "method",
            "name": "_multiplyMatrix",
            "access": "protected",
            "tagname": "",
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 297,
            "description": "値が指定された範囲内にあることを保証します。色相は 180、明度は 255、その他は 100 が最大値です。",
            "itemtype": "method",
            "name": "_cleanValuea",
            "access": "protected",
            "tagname": "",
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrix.js",
            "line": 307,
            "description": "行列が 5x5 (25) の長さであることを保証します。",
            "itemtype": "method",
            "name": "_fixMatrix",
            "access": "protected",
            "tagname": "",
            "class": "ColorMatrix",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrixFilter.js",
            "line": 54,
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "matrix",
                    "description": "実行すべき色への操作が記述された 4x5 行列です。",
                    "type": "Array"
                }
            ],
            "class": "ColorMatrixFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrixFilter.js",
            "line": 64,
            "description": "指定されたコンテキストにフィルターを適用します。",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "ソースとして使用する 2D コンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "ソースとして使用する矩形の x 座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ソースとして使用する矩形の y 座標です。",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "ソース矩形の幅です。",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "ソース矩形の高さです。",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "オプションです。結果を描く 2D コンテキストです。デフォルトは ctx に渡されたコンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. 結果を描く X 座標です。デフォルトは x に渡された値です。",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. 結果を描く Y 座標です。デフォルトは y に渡された値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ColorMatrixFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrixFilter.js",
            "line": 111,
            "description": "このオブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このオブジェクトの文字列表現です。",
                "type": "String"
            },
            "class": "ColorMatrixFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/ColorMatrixFilter.js",
            "line": 121,
            "description": "このオブジェクトの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在の ColorFilter インスタンスの複製です。",
                "type": "ColorFilter"
            },
            "class": "ColorMatrixFilter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/Filter.js",
            "line": 65,
            "description": "初期化用のメソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Filter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/Filter.js",
            "line": 73,
            "description": "フィルターの描画に必要なマージンを示す rectangle オブジェクトを返します。\n例えば、描画領域を左に 4 ピクセル、右に 7 ピクセル広げるフィルターの場合\n（ただし上下方向には広がらない）返される rectangle の値は (x=-4, y=0, width=11, height=0) になります。",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "フィルターの描画に必要なマージンを示す rectangle オブジェクトです。",
                "type": "Rectangle"
            },
            "class": "Filter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/Filter.js",
            "line": 84,
            "description": "指定されたコンテキストにフィルターを適用します。",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "ソースとして使用する 2D コンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "ソースとして使用する矩形の x 座標です。",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ソースとして使用する矩形の y 座標です。",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "ソース矩形の幅です。",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "ソース矩形の高さです。",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "オプションです。結果を描く 2D コンテキストです。デフォルトは ctx に渡されたコンテキストです。",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "targetX",
                    "description": "Optional. 結果を描く X 座標です。デフォルトは x に渡された値です。",
                    "type": "Number"
                },
                {
                    "name": "targetY",
                    "description": "Optional. 結果を描く Y 座標です。デフォルトは y に渡された値です。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Filter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/Filter.js",
            "line": 99,
            "description": "このオブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このインスタンスの文字列表現です。",
                "type": "String"
            },
            "class": "Filter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/filters/Filter.js",
            "line": 109,
            "description": "この Filter インスタンスの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在の Filter インスタンスの複製です。",
                "type": "Filter"
            },
            "class": "Filter",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 52,
            "description": "単位行列で、無変換を表します。読み取り専用です。",
            "itemtype": "property",
            "name": "identity",
            "static": 1,
            "type": "Matrix2D",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 60,
            "description": "度をラジアンに変換するための乗数です。Matrix2D が内部的に使用します。読み取り専用です。",
            "itemtype": "property",
            "name": "DEG_TO_RAD",
            "static": 1,
            "final": 1,
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 71,
            "description": "3x3 アフィン変換行列の (0, 0) の位置の値です。",
            "itemtype": "property",
            "name": "a",
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 78,
            "description": "3x3 アフィン変換行列の (0, 1) の位置の値です。",
            "itemtype": "property",
            "name": "b",
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 85,
            "description": "3x3 アフィン変換行列の (1, 0) の位置の値です。",
            "itemtype": "property",
            "name": "c",
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 92,
            "description": "3x3 アフィン変換行列の (1, 1) の位置の値です。",
            "itemtype": "property",
            "name": "d",
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 99,
            "description": "3x3 アフィン変換行列の (2, 0) の位置の値です。",
            "itemtype": "property",
            "name": "tx",
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 106,
            "description": "3x3 アフィン変換行列の (2, 1) の位置の値です。",
            "itemtype": "property",
            "name": "ty",
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 113,
            "description": "表示オブジェクトに適用されるアルファを表すプロパティです。これは行列操作に含まれるものではありませんが\ngetConcatenatedMatrix のような連結されたアルファを提供する操作で使われます。",
            "itemtype": "property",
            "name": "alpha",
            "type": "Number",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 121,
            "description": "表示オブジェクトに適用されるシャドーを表すプロパティです。これは行列操作に含まれるものではありませんが\ngetConcatenatedMatrix のような連結されたシャドーを提供する操作で使われます。",
            "itemtype": "property",
            "name": "shadow",
            "type": "Shadow",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 129,
            "description": "表示オブジェクトに適用される合成処理を表すプロパティです。これは行列操作に含まれるものではありませんが\ngetConcatenatedMatrix のような連結された合成処理を提供する操作で使われます。利用可能な合成処理の一覧は、\n<a href=\"https://developer.mozilla.org/ja/Canvas_tutorial/Compositing\">https://developer.mozilla.org/ja/Canvas_tutorial/Compositing</a> をご覧ください。",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "String",
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 139,
            "description": "初期化用のメソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 156,
            "description": "指定された行列の要素を、この行列の前から連結します。全ての引数は必須です。",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 182,
            "description": "指定された行列の要素をこの行列の後から連結します。全ての引数は必須です。",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 208,
            "description": "P定された行列を、この行列の前から連結します。",
            "itemtype": "method",
            "name": "prependMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 219,
            "description": "指定された行列をこの行列の後から連結します。",
            "itemtype": "method",
            "name": "appendMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 231,
            "description": "指定された表示オブジェクトの\b変換属性から行列のプロパティを生成し、この行列の前から連結します。\n例えば、表示オブジェクトから新しい行列を生成するために利用できます。var mtx = new Matrix2D();\nmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);",
            "itemtype": "method",
            "name": "prependTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "オプションです。",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "オプションです。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 273,
            "description": "指定された表示オブジェクトの\b変換属性から行列のプロパティを生成し、この行列の後から連結します。\n例えば、表示オブジェクトから新しい行列を生成するために利用できます。var mtx = new Matrix2D();\nmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);",
            "itemtype": "method",
            "name": "appendTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "オプションです。",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "オプションです。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 317,
            "description": "この行列に回転変換を適用します。",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "ラジアン単位の角度です。度を使用する場合は <code>Math.PI/180</code> で乗算をします。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 340,
            "description": "この行列にスキュー変換を適用します。",
            "itemtype": "method",
            "name": "skew",
            "params": [
                {
                    "name": "skewX",
                    "description": "水平方向に傾斜させる角度を度で指定します。",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "垂直方向に傾斜させる角度を度で指定します。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 354,
            "description": "この行列に拡大／縮小の変換を適用します。",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 369,
            "description": "行列を x 軸と y 軸に沿って平行移動します。",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 382,
            "description": "この行列のプロパティを単位行列（無変換になる行列）の値にします。",
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 394,
            "description": "反対の変換を行う逆行列を生成します。",
            "itemtype": "method",
            "name": "invert",
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 416,
            "description": "Rこの行列が単位行列であるかを判別します。",
            "itemtype": "method",
            "name": "isIdentity",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 425,
            "description": "行列を\b変換属性 (x, y, scaleX, scaleY, and rotation) に分解します。これらの値は、表示結果は同じでも\n行列の生成に使用した\b変換属性とは一致しないかもしれないことに注意して下さい。",
            "itemtype": "method",
            "name": "decompose",
            "params": [
                {
                    "name": "target",
                    "description": "\b変換属性を適用するオブジェクトです。null の場合は新しいオブジェクトが返されます。",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 457,
            "description": "行列の全てのプロパティを指定された値で再初期化します。",
            "itemtype": "method",
            "name": "appendProperties",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "望まれるアルファの値です。",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "望まれるシャドーの値です。",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "望まれる合成処理の値です。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 479,
            "description": "現在の行列に指定されたビジュアル属性を後ろから連結します。",
            "itemtype": "method",
            "name": "appendProperties",
            "params": [
                {
                    "name": "alpha",
                    "description": "望まれるアルファの値です。",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "望まれるシャドーの値です。",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "望まれる合成処理の値です。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 494,
            "description": "現在の行列に指定されたビジュアル属性を前から連結します。",
            "itemtype": "method",
            "name": "prependProperties",
            "params": [
                {
                    "name": "alpha",
                    "description": "望まれるアルファの値です。",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "望まれるシャドーの値です。",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "望まれる合成処理の値です。",
                    "type": "String"
                }
            ],
            "return": {
                "description": "この行列です。呼び出しの連結に便利です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 509,
            "description": "この Matrix2D インスタンスの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在の Matrix2D インスタンスの複製です。",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Matrix2D.js",
            "line": 522,
            "description": "このオブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このインスタンスの文字列表現です。",
                "type": "String"
            },
            "class": "Matrix2D",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Point.js",
            "line": 51,
            "description": "X 座標です。",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Point",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Point.js",
            "line": 58,
            "description": "Y 座標です。",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Point",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Point.js",
            "line": 66,
            "description": "初期化用のメソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Point",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Point.js",
            "line": 77,
            "description": "この Point インスタンスの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在の Point インスタンスの複製です。",
                "type": "Rectangle"
            },
            "class": "Point",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Point.js",
            "line": 86,
            "description": "このオブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このインスタンスの文字列表現です。",
                "type": "String"
            },
            "class": "Point",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 53,
            "description": "X 座標です。",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Rectangle",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 60,
            "description": "Y 座標です。",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Rectangle",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 67,
            "description": "幅です。",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Rectangle",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 74,
            "description": "高さです。",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Rectangle",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 82,
            "description": "初期化用のメソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Rectangle",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 95,
            "description": "この Rectangle インスタンスの複製を返します。",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "現在の Rectangle インスタンスの複製です。",
                "type": "Rectangle"
            },
            "class": "Rectangle",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/geom/Rectangle.js",
            "line": 104,
            "description": "このオブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このインスタンスの文字列表現です。",
                "type": "String"
            },
            "class": "Rectangle",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 34,
            "description": "ButtonHelperはインタラクティブなボタンを{{#crossLink \"MovieClip\"}}{{/crossLink}}または{{#crossLink \"BitmapAnimation\"}}{{/crossLink}}インスタンスから\n生成するヘルパークラスです。本クラスはオブジェクトからのマウスイベントを傍受し、自動的に{{#crossLink \"BitmapAnimation/gotoAndStop\"}}{{/crossLink}}\nまたは{{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}}を呼び、それぞれのアニメーションラベル、ポインタカーソルを追加、そして\n当たり判定フレームをユーザが定義できるようにします。\n\nButtonHelperインスタンスはステージに追加する必要はありません。しかし、ガベージコレクションを防ぐために参照を保持しておくべきです。",
            "example": [
                "\n     var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");"
            ],
            "params": [
                {
                    "name": "target",
                    "description": "管理するインスタンス。",
                    "type": "BitmapAnimation|MovieClip"
                },
                {
                    "name": "outLabel",
                    "description": "ボタンからロールアウトした際に飛ぶラベルまたはアニメーション。",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"out\""
                },
                {
                    "name": "overLabel",
                    "description": "ボタンにロールオーバーした際に飛ぶラベルまたはアニメーション。",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"over\""
                },
                {
                    "name": "downLabel",
                    "description": "ボタンを押下した際に飛ぶラベルまたはアニメーション。",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"down\""
                },
                {
                    "name": "play",
                    "description": "状態が変化した際にヘルパーが\"gotoAndPlay\"を呼ぶか、または\"gotoAndStop\"を呼ぶか。",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "hitArea",
                    "description": "ボタンに対して当たり判定用の随意アイテム。もしこれが定義されていない場合、\nボタンの表示状態が代わりに利用される。\"target\"引数と同じインスタンスを利用することができることに注意してください。",
                    "type": "DisplayObject",
                    "optional": true
                },
                {
                    "name": "hitLabel",
                    "description": "hitAreaの境界を定義するhitAreaインスタンス上のラベルまたはアニメーション。\nもしnullの場合はhitAreaの初期状態が使われます。",
                    "type": "String",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 62,
            "description": "読み取り専用。本ボタンヘルパーの対象",
            "itemtype": "property",
            "name": "target",
            "type": "MovieClip | BitmapAnimation",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 69,
            "description": "マウスカーソルが対象から外れた際に表示するラベル名またはフレーム数。初期状態は\"over\"に対して。",
            "itemtype": "property",
            "name": "overLabel",
            "type": "String | Number",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 76,
            "description": "マウスカーソルが対象に重なった際に表示するラベル名またはフレーム数。初期状態は\"out\"に対して。",
            "itemtype": "property",
            "name": "outLabel",
            "type": "String | Number",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 83,
            "description": "対象を押下した際に表示するラベル名またはフレーム数。初期状態は\"down\"に対して。",
            "itemtype": "property",
            "name": "downLabel",
            "type": "String | Number",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 90,
            "description": "trueの場合、ButtonHelperはgotoAndPlayを呼ぶ。falseの場合はgotoAndStopを呼ぶ。 初期状態はfalse。",
            "itemtype": "property",
            "name": "play",
            "default": "false",
            "type": "Boolean",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 99,
            "itemtype": "property",
            "name": "_isPressed",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 106,
            "itemtype": "property",
            "name": "_isPressed",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 114,
            "description": "初期化メソッド",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 139,
            "description": "対象に対してボタンの機能を有効または無効にする",
            "itemtype": "method",
            "name": "setEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 157,
            "description": "本オブジェクトを文字列で表現したものを返却する",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "インスタンスを文字列で表現したもの",
                "type": "String"
            },
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/ButtonHelper.js",
            "line": 168,
            "itemtype": "method",
            "name": "handleEvent",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 55,
            "description": "現在のブラウザでタッチがサポートされていればtrueを返却する",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "現在のブラウザでタッチがサポートされているかを示す",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 66,
            "description": "特定のEaselJSのステージに対してタッチ作用を有効にする。現在iOS(加え、モダンなAndroidブラウザなどの互換ブラウザ)、\nIE10がサポート。\nシングルタッチとマルチタッチモードの両方をサポート。EaselJSのMouseEventモデルを拡張するが、ダブルクリックまたは\nオーバー/アウトイベントはサポートしていない。詳細についてはMouseEvent.pointerIDを参照のこと。",
            "itemtype": "method",
            "name": "enable",
            "params": [
                {
                    "name": "stage",
                    "description": "タッチを有効にするステージ",
                    "type": "Stage"
                },
                {
                    "name": "singleTouch",
                    "description": "trueのとき、単一のタッチのみが一度に発生する",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "allowDefault",
                    "description": "trueのとき、標準のジェスチャーアクション（例. スクロール、ズーム）は\nユーザが扱っているキャンバス上で有効となる",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "対象のステージへタッチの有効化ができたとき、trueを返却する",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 92,
            "description": "ステージ上でTouch.enableを呼んだ際に設定されたリスナーを全て取り除く",
            "itemtype": "method",
            "name": "disable",
            "params": [
                {
                    "name": "stage",
                    "description": "タッチを無効にする対象のステージ",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 106,
            "itemtype": "method",
            "name": "_IOS_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 121,
            "itemtype": "method",
            "name": "_IOS_disable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 137,
            "itemtype": "method",
            "name": "_IOS_handleEvent",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 162,
            "itemtype": "method",
            "name": "_IE_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 179,
            "itemtype": "method",
            "name": "_IE_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 195,
            "itemtype": "method",
            "name": "_IE_handleEvent",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 222,
            "itemtype": "method",
            "name": "_handleStart",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 236,
            "itemtype": "method",
            "name": "_handleMove",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/ui/Touch.js",
            "line": 245,
            "itemtype": "method",
            "name": "_handleEnd",
            "access": "protected",
            "tagname": "",
            "class": "Touch",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 42,
            "description": "読み取り専用。メッセージを何も出力しません。",
            "type": "Number",
            "itemtype": "property",
            "name": "NONE",
            "default": "0",
            "static": 1,
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 51,
            "description": "読み取り専用。エラーメッセージを出力します。",
            "type": "Number",
            "itemtype": "property",
            "name": "ERROR",
            "default": "1",
            "static": 1,
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 60,
            "description": "読み取り専用。警告メッセージを出力します。",
            "type": "Number",
            "itemtype": "property",
            "name": "WARNING",
            "default": "2",
            "static": 1,
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 69,
            "description": "読み取り専用。トレース文を出力します。",
            "type": "Number",
            "itemtype": "property",
            "name": "TRACE",
            "default": "3",
            "static": 1,
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 78,
            "description": "読み取り専用。全てのメッセージを出力します。",
            "type": "Number",
            "itemtype": "property",
            "name": "ALL",
            "default": "255",
            "static": 1,
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 87,
            "description": "全てのログされたメッセージを扱う際に使用される関数を定義します。デフォルトでは console.log を使用します。\n指定された関数には、Log.log と同じ 3 つの引数が渡されます。一致するキーが見つかった場合、メッセージは\n拡張されます。<br/><br/>\n例えば、全てのメッセージをサーバーに送信したり、テキストエリアに出力するといった使い方が可能です。値を null に\n設定することで、全てのログを無効にすることもできます。<br/><br/>\n全てのメッセージは、レベルの競ってに関わらず、out 関数に渡されます。そのため、関数にはレベルを正しく処理する\nことが求められます。これは、全てのメッセージをサーバーに送信しながら、現在のレベル以下のメッセージは UI に\n表示するといった使い方を可能にするためです。",
            "type": "Function",
            "itemtype": "property",
            "name": "out",
            "static": 1,
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 107,
            "description": "出力するメッセージのレベルを指定します。例えば、<code>Log.level = Log.WARNING</code> と設定すると、 \nレベル 2 (Log.WARNING)  またはそれ以下 (例: Log.ERROR) のメッセージが出力されます。デフォルト値は Log.ALL です。",
            "type": "Function",
            "itemtype": "property",
            "name": "out",
            "default": "255",
            "static": 1,
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 117,
            "itemtype": "property",
            "name": "_keys",
            "static": 1,
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 125,
            "description": "キーと長いメッセージを関連づけるオブジェクトを追加します。 \nメッセージにはオプションとして \"%DETAILS%\" を含めることができます。\"%DETAILS%\" は error に渡された\n任意の詳細と置き換えられます。例えば、<br/>\nLog.addKeys( {MY_ERROR:\"これは私のエラーの [%DETAILS%]\" 番目の記述です} );\nLog.error( \"MY_ERROR\" , 5 ); // \"これは私のエラーの [5]\" 番目の記述です\" が出力される",
            "params": [
                {
                    "name": "keys",
                    "description": "キーとメッセージを定義するオブジェクト",
                    "type": "Object"
                }
            ],
            "static": 1,
            "itemtype": "method",
            "name": "addKeys",
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Log.js",
            "line": 139,
            "description": "out 属性に設定されたメソッドを使い、指定されたエラーを出力します。エラーが定義済みのキーに一致した場合は\n定義されているメッセージで置き換えられます。",
            "params": [
                {
                    "name": "message",
                    "description": "出力するエラーメッセージもしくはキー",
                    "type": "String"
                },
                {
                    "name": "details",
                    "description": "メッセージと関連する任意の詳細情報",
                    "type": "Object"
                },
                {
                    "name": "level",
                    "description": "メッセージの重要性を指定する 1 と 254 の間の数字。詳細は Log.level を参照。",
                    "type": "Number"
                }
            ],
            "static": 1,
            "itemtype": "method",
            "name": "error",
            "class": "Log",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 59,
            "description": "完了時に発行されます。",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "イベントを発行したオブジェクトです。",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "イベントの種類です。",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 67,
            "description": "非同期の生成が進行すると発行されます。",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "target",
                    "description": "イベントを発行したオブジェクトです。",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "イベントの種類です。",
                    "type": "String"
                },
                {
                    "name": "progress",
                    "description": "現在の進行を示す値です (0-1)。",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 78,
            "description": "生成されたスプライトシートの画像（個々のフレームでは無く）の幅の最大値です。指定する値には、2 の階乗\n(例 1024, 2048, 4096) の使用が推奨されます。フレーム全てが最大値に収まらない場合は、必要に応じて\n追加の画像が生成されます。",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "default": "2048",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 88,
            "description": "生成されたスプライトシートの画像（個々のフレームでは無く）の高さの最大値です。指定する値には、2 の階乗\n(例 1024, 2048, 4096) の使用が推奨されます。フレーム全てが最大値に収まらない場合は、必要に応じて\n追加の画像が生成されます。",
            "itemtype": "property",
            "name": "maxHeight",
            "type": "Number",
            "default": "2048",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 98,
            "description": "生成されるスプライトシートです。生成が正常に完了するまでは、この値は null です。",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "SpriteSheet",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 105,
            "description": "全てのフレームをスプライトシートに描画する際に適用される拡大率です。この値は、addFrame の呼び出し時に\n指定された拡大率に乗算されます。これを使うと、例えば、特定のデバイスの解像度（例 タブレットとモバイル）\nに合わせてスプライトシートを実行時に生成できます。",
            "itemtype": "property",
            "name": "defaultScale",
            "type": "Number",
            "default": "1",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 115,
            "description": "フレームの間で使用するパディングです。描画されたベクターコンテンツのアンチエイリアスの保存に便利です。",
            "itemtype": "property",
            "name": "padding",
            "type": "Number",
            "default": "1",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 123,
            "description": "生成に使用できる時間の割合を示す 0.01 から 0.99 の間の値です。1 秒あたりに生成に使用される秒数と考える\nこともできます。例えば、値が 0.3 の場合、生成 1 回あたり約 15ms の使用で、毎秒 20 回実行されるでしょう。\n（これで利用可能な時間の 30%、又は 1 秒あたり 0.3 秒になります）\nDefaults to 0.3.",
            "itemtype": "property",
            "name": "timeSlice",
            "type": "Number",
            "default": "0.3",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 134,
            "description": "読み取り専用です。生成の進行状況を示す 0 から 1 の間の値です。生成実行前の値は -1 です。",
            "itemtype": "property",
            "name": "progress",
            "type": "Number",
            "default": "-1",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 142,
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function",
            "default": "null",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 149,
            "description": "生成完了時に呼ばれるコールバック関数です。このインスタンスを示す引数 1 つと呼び出されます。",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"complete\" イベントの追加により、将来のバージョンからは削除されるでしょう。",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 157,
            "description": "非同期の生成が進行すると呼ばれるコールバック関数です。このインスタンスへの参照と、進行状況を示す値\n(0-1) の引数 2 つと呼び出されます。",
            "itemtype": "property",
            "name": "onProgress",
            "type": "Function",
            "deprecated": true,
            "deprecationMessage": "\"complete\" イベントの追加により、将来のバージョンからは削除されるでしょう。",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 178,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 185,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 192,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 199,
            "itemtype": "property",
            "name": "_nextFrameIndex",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 206,
            "itemtype": "property",
            "name": "_index",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 213,
            "itemtype": "property",
            "name": "_timerID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 220,
            "itemtype": "property",
            "name": "_scale",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 228,
            "description": "初期化用のメソッドです。",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 240,
            "description": "{{#crossLink \"SpriteSheet\"}}{{/crossLink}} にフレームを追加します。フレームは {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} メソッドを\n呼ぶまで追加されません。オプションの設定用の引数を使って、描画の直前に関数を実行できます。例えば、1 つの\nソースを、異なるフレームを生成するために操作したり子を変更しながら、複数回足すことが可能です。\n\nソースに対する変形 (x, y, scale, rotate, alpha) は regX/Y を除いて無視されることに注意して下さい。ソースの\nオブジェクトを変形してそれをスプライトシートに適用させるには、{{#crossLink \"Container\"}}{{/crossLink}} 内に配置し、\nContainer をソースとして渡します。",
            "itemtype": "method",
            "name": "addFrame",
            "params": [
                {
                    "name": "source",
                    "description": "フレームに描画するソースの {{#crossLink \"DisplayObject\"}}{{/crossLink}}  です。",
                    "type": "DisplayObject"
                },
                {
                    "name": "sourceRect",
                    "description": "フレームに描画するソースの領域を定義する {{#crossLink \"Rectangle\"}}{{/crossLink}} です。\n指定されていない場合は、ソースから <code>getBounds</code> メソッド、bounds 属性、または <code>nominalBounds</code> 属性\nを探して使います。いずれも見つからなかった場合、フレームはスキップされます。",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "オプションです。フレームに描画する際の拡大率です。デフォルトは 1 です。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "setupFunction",
                    "description": "オプションです。フレームに描画する直前に呼び出される関数を指定します。",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "setupParams",
                    "description": "描画直前に呼び出される関数に渡す引数です。",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "setupScope",
                    "description": "描画直前に呼び出される関数のスコープです。",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "追加されたフレームのインデックス値です。sourceRect が決定できなかった場合は null になります。",
                "type": "Number"
            },
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 268,
            "description": "生成されるスプライトシートに含まれるアニメーションを追加します。",
            "itemtype": "method",
            "name": "addAnimation",
            "params": [
                {
                    "name": "アニメーションの名前です。",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "frames",
                    "description": "アニメーションを構成するフレームのインデックスの配列です。例えば、 [3,6,5] は、\nフレームを 3, 6, 5 の順に再生するアニメーションの記述になります。",
                    "type": "Array"
                },
                {
                    "name": "next",
                    "description": "このアニメーションが終了時、次に再生するアニメーションの名前です。false を指定すると\nこのアニメーション終了時に再生が停止します。デフォルトでは同じアニメーションが最初から繰り返し再生されます。",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "frequency",
                    "description": "このアニメーションのフレームを進める頻度です。例えば、値が 2 であれば、\n2 つ目の刻み毎にアニメーションが進行します。",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 284,
            "description": "MovieClip に含まれるフレームトラベルをこの builder に追加します。ラベルはアニメーションの開始位置と終了位置を\n示すものとして追加されます。例えば、全フレーム数が 15 の MovieClip 内で、\"foo\" という名前のラベルがフレーム 0 に、\n\"bar\" という名前のラベルがフレーム 10 にあれば、\"foo\" という名前でフレーム 0 から 9 間で再生するアニメーションを、\n\"bar\" という名前でフレーム 10 から 14 を再生するアニメーションを追加します。\n\nこのメソッドは actionsEnabled が false の状態で最後のフレームまで MovieClip 全てを走査します。",
            "itemtype": "method",
            "name": "addMovieClip",
            "params": [
                {
                    "name": "source",
                    "description": "スプライトシートに追加するソースとなる MovieClip です。",
                    "type": "MovieClip"
                },
                {
                    "name": "sourceRect",
                    "description": "フレームに描画するソースの領域を定義する {{#crossLink \"Rectangle\"}}{{/crossLink}} です。\n指定されていない場合は、ソースから <code>getBounds</code> メソッド、bounds 属性、または <code>nominalBounds</code> 属性\nを探して使います。いずれも見つからなかった場合、MovieClip は追加されません。",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "フレームに描画する際の拡大率です。",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 334,
            "description": "現在のフレーム情報から、SpriteSheet のインスタンスを生成します。",
            "itemtype": "method",
            "name": "build",
            "return": {
                "description": "SpriteSheet 生成された SpriteSheet のインスタンスです。既に生成中、またはエラー時は null です。"
            },
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 347,
            "description": "現在のフレーム情報から、非同期で {{#crossLink \"SpriteSheet\"}}{{/crossLink}} のインスタンスを生成します。\n<code>timeSlice</code> で指定された時間を使って 1 秒間に 20 回実行されます。完了すると指定された\nコールバックを呼び出します。",
            "itemtype": "method",
            "name": "buildAsync",
            "params": [
                {
                    "name": "timeSlice",
                    "description": "このインスタンスの timeSlice 属性に設定します。",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 362,
            "description": "進行中の非同期の生成を中止します。",
            "itemtype": "method",
            "name": "stopAsync",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 371,
            "description": "SpriteSheetBuilder のインスタンスは複製できません。",
            "itemtype": "method",
            "name": "clone",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 379,
            "description": "このオブジェクトの文字列での表現を返します。",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "このインスタンスの文字列表現です。",
                "type": "String"
            },
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 389,
            "itemtype": "method",
            "name": "_startBuild",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 429,
            "itemtype": "method",
            "name": "_getSize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 440,
            "itemtype": "method",
            "name": "_fillRow",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "行の幅と高さを返します。",
                "type": "Number"
            },
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 473,
            "itemtype": "method",
            "name": "_endBuild",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 485,
            "itemtype": "method",
            "name": "_run",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetBuilder.js",
            "line": 507,
            "itemtype": "method",
            "name": "_drawNext",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Boolean 最後の描画であれば false を返します。"
            },
            "class": "SpriteSheetBuilder",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetUtils.js",
            "line": 46,
            "itemtype": "property",
            "name": "_workingCanvas",
            "static": 1,
            "type": "HTMLCanvasElement | Object",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetUtils",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetUtils.js",
            "line": 54,
            "itemtype": "property",
            "name": "_workingContext",
            "static": 1,
            "type": "CanvasRenderingContext2D",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheetUtils",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetUtils.js",
            "line": 63,
            "description": "<b>これは実験的なメソッドであり、おそらくバグがあります。問題があれば報告してください。</b><br/><br/>\n既存のスプライトシートに対して、元のフレームを水平方向、垂直方向、または両方に反転する形で拡張します。\nまた、適切なアニメーションとフレームのデータを追加します。反転されたアニメーションは元々のものに接頭辞が追加された名前を持ちます（_h, _v, _hv から適切なもの）。\nスプライトシートの画像は、このメソッドを使用する前に完全にロードされるよう気を付けてください。\n<br/><br/>\n例:<br/>\nSpriteSheetUtils.addFlippedFrames(mySpriteSheet, true, true);\n上の例では、水平方向に反転されたフレームと、垂直方向に反転されたフレームを追加します。\n<br/><br/>\n注記として、全ての表示オブジェクトは、scaleXまたはscaleYプロパティをマイナスに設定することでも、反転させることができます。\nこの方法では、いくつかのブラウザ（特に、ハードウェアアクセラレートされたCanvasを持たないもの）では若干パフォーマンスに悪影響があります。\nこのことが、addFlippedFramesを使用できるようにしている理由です。",
            "itemtype": "method",
            "name": "addFlippedFrames",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                },
                {
                    "name": "horizontal",
                    "description": "trueの場合、水平に反転されたフレームが追加されます。",
                    "type": "Boolean"
                },
                {
                    "name": "vertical",
                    "description": "trueの場合、垂直に反転されたフレームが追加されます。",
                    "type": "Boolean"
                },
                {
                    "name": "both",
                    "description": "trueの場合、水平および垂直に反転されたフレームが追加されます。",
                    "type": "Boolean"
                }
            ],
            "class": "SpriteSheetUtils",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetUtils.js",
            "line": 92,
            "description": "特定のスプライトシートから、1フレームを新しいPNG画像として返します。\n注意点としては、ほとんど全ての場合において、この方法によりフレームを分割し、Bitmapインスタンスとして表示するよりも、\n一時停止したBitmapAnimationインスタンスを用いたほうがより良い結果になります。",
            "itemtype": "method",
            "name": "extractFrame",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "フレームを抽出する元となるSpriteSheetインスタンス",
                    "type": "Image"
                },
                {
                    "name": "frame",
                    "description": "抽出したいフレーム番号またはアニメーション名。\nアニメーション名が指定された場合、アニメーション中の最初のフレームのみが抽出されます。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "特定のスプライトシートから1フレーム抽出された新しいPNG画像",
                "type": "Image"
            },
            "class": "SpriteSheetUtils",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/SpriteSheetUtils.js",
            "line": 119,
            "description": "1画像のRGBチャンネルと、別の画像のアルファチャンネルを結合します。\nこのメソッドでは色のデータを含む圧縮されたJPEG画像とアルファチャンネルを含むモノクロのPNG32画像を使用することも可能です。\n特定の種類の画像（JPEG圧縮としてレンダリングされるような詳細を持つ物）を使用することは、単体のRGBAのPNG32形式画像にくらべて、多大なファイルサイズの節約になります。\nこのメソッドはとても高速です（通常、実行の度に1～2ms程度）。",
            "itemtype": "method",
            "name": "mergeAlpha",
            "static": 1,
            "params": [
                {
                    "name": "rbgImage",
                    "description": "RGBチャンネルを持つ画像（またはCanvas）。",
                    "type": "Image"
                },
                {
                    "name": "alphaImage",
                    "description": "アルファチャンネルを持つ画像（またはCanvas）。",
                    "type": "Image"
                },
                {
                    "name": "canvas",
                    "description": "(オプション). 指定した場合、そのCanvasが使用され、戻り値として返されます。それ以外の場合、新しいCanvasが生成されます。",
                    "type": "Canvas"
                }
            ],
            "return": {
                "description": "画像データと結合されたCanvas。これはBitmapやSpriteSheetのソースとして使用することができます。",
                "type": "Canvas"
            },
            "class": "SpriteSheetUtils",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 57,
            "description": "tickごとに送出されます。",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "イベントを送出するする対象のオブジェクト。",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "イベントタイプ。",
                    "type": "String"
                },
                {
                    "name": "paused",
                    "description": "現在Tickerが一時停止中かどうかを示します。",
                    "type": "Boolean"
                },
                {
                    "name": "delta",
                    "description": "最後のtickから経過した時間（ms）。",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "Tilcerが初期化されてからの合計時間（ms）。",
                    "type": "Number"
                },
                {
                    "name": "runTime",
                    "description": "Tickerが初期化されてから、一時停止していない状態での合計時間(ms)。\n\t例えば、Tickerが初期化されてから一時停止していた合計時間は、time-runtimeで求めることができます。",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 71,
            "description": "requestAnimationFrameがブラウザでサポートされており、Tickerがそれを使用するべきかどうかを示します。falseの場合、TickerはsetTimeoutを使用します。\nRAF(requestAnimationFrame)を使用する場合、フレームレートとして60を割った数を指定することが推奨されています(ex. 15, 20, 30, 60).",
            "itemtype": "property",
            "name": "useRAF",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 94,
            "itemtype": "property",
            "name": "_listeners",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 101,
            "itemtype": "property",
            "name": "_pauseable",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 108,
            "itemtype": "property",
            "name": "_paused",
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 115,
            "itemtype": "property",
            "name": "_inited",
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 122,
            "itemtype": "property",
            "name": "_startTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 129,
            "itemtype": "property",
            "name": "_pausedTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 136,
            "description": "すでに経過したtick数",
            "itemtype": "property",
            "name": "_ticks",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 144,
            "description": "Tickerが一時停止中に経過したtick数",
            "itemtype": "property",
            "name": "_pausedTicks",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 152,
            "itemtype": "property",
            "name": "_interval",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 159,
            "itemtype": "property",
            "name": "_lastTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 166,
            "itemtype": "property",
            "name": "_times",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 173,
            "itemtype": "property",
            "name": "_tickTimes",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 180,
            "itemtype": "property",
            "name": "_rafActive",
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 187,
            "itemtype": "property",
            "name": "_timeoutID",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 196,
            "description": "tickイベントのリスナーを追加します。リスナーはtickメソッドを公開しているオブジェクト、または関数でなければなりません。\nリスナーは各tick / 間隔ごとに1度呼び出されます。この間隔は.setInterval(ms)メソッドによって指定されます。\ntickメソッドまたは関数には、2つのパラメータが渡されます。\n前回のtickから今回までの経過時間とTickerが一時停止中かどうかを示すBoolean値です。",
            "itemtype": "method",
            "name": "addListener",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "リスナーとして追加するオブジェクト、または関数。",
                    "type": "Object"
                },
                {
                    "name": "pauseable",
                    "description": "falseの場合、TickerがTicker.pause()によって一時停止している場合でも、\nリスナーは継続して呼び出されます。デフォルト値はtrueです。",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "\"tick\" イベントの採用のため。将来のバージョンで削除されます。",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 215,
            "description": "初期化、またはタイマーをリセットして、全ての関連するリスナー、FPS測定データ、起動中のtickをクリアします。\n最初のリスナーが登録された際、自動的に呼び出されます。",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 231,
            "description": "指定したリスナーを削除します。",
            "itemtype": "method",
            "name": "removeListener",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "tickイベントのリスナーとなっているオブジェクト、またはメソッド。",
                    "type": "Object"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "\"tick\" イベントの採用のため。将来のバージョンで削除されます。",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 248,
            "description": "全てのリスナーを削除します。",
            "itemtype": "method",
            "name": "removeAllListeners",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "\"tick\" イベントの採用のため。将来のバージョンで削除されます。",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 259,
            "description": "tickごとの間隔となる目標時間(ms)を設定します。デフォルト値は50です（20 FPS）。\n注意点として、tickごとの実際の時間はCPUの処理に依存し、設定値よりも大きくなるかもしれません。",
            "itemtype": "method",
            "name": "setInterval",
            "static": 1,
            "params": [
                {
                    "name": "interval",
                    "description": "tickごとの時間(ms)。デフォルト値は50です。",
                    "type": "Number"
                }
            ],
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 272,
            "description": "tickごとの時間間隔について、現在の目標時間を返します。",
            "itemtype": "method",
            "name": "getInterval",
            "static": 1,
            "return": {
                "description": "tickイベント間の、現在の目標時間間隔(ms)。",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 282,
            "description": "1秒ごとの目標フレームレート(FPS)を設定します。 例えば、40msの間隔の場合、getFPS()は 25 を返します(1000ms / 40ms = 25fps)。",
            "itemtype": "method",
            "name": "setFPS",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "1秒ごとにブロードキャストされる目標tick数",
                    "type": "Number"
                }
            ],
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 292,
            "description": "1秒ごとの目標フレームレート(FPS)を返します。例えば、40msの間隔の場合、getFPS()は 25 を返します(1000ms / 40ms = 25fps)。",
            "itemtype": "method",
            "name": "getFPS",
            "static": 1,
            "return": {
                "description": "現在の、1秒ごとにブロードキャストされる目標tick数",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 302,
            "description": "実測による、1秒ごとの tick数を返します。",
            "itemtype": "method",
            "name": "getMeasuredFPS",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "（オプション） 実測による1秒ごとのtick数を計算する際に使用する、過去のtick数。 デフォルト値は1秒ごとのtick数。",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "実測による、1秒ごとのtick数。パフォーマンスの影響を受けるため、これは目標FPSとは異なるかもしれません。",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 318,
            "description": "Tickerが一時停止中の場合、pausableなリスナーはイベントを受け取りません。詳細はaddListenerを参照してください。",
            "itemtype": "method",
            "name": "setPaused",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "Tickerが一時停止（true）または非停止（false）のどちらかを示します。",
                    "type": "Boolean"
                }
            ],
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 328,
            "description": "TickerがsetPausedの呼び出しにより、現在一時停止しているかどうかを、真偽値で返します。",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "return": {
                "description": "Tickerが現在一時停止しているかどうか。",
                "type": "Boolean"
            },
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 338,
            "description": "ティッカーが初期化されてからの経過秒数(ms)を返します。\n例えば、時間と同期したアニメーションにおいて、経過した時間の正確な量を求めるためにこれを使用することができます。",
            "itemtype": "method",
            "name": "getTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "trueの場合、Tickerが一時停止していない間の経過時間のみが返されます。\nfalseの場合、tickイベントのリスナーが追加されてからの、全ての経過時間が返されます。\nデフォルト値はfalseです。",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Tickerが初期化されてからの経過時間(ms)。",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 352,
            "description": "Tickerによってブロードキャストされたtickの数を返します。",
            "itemtype": "method",
            "name": "getTicks",
            "static": 1,
            "params": [
                {
                    "name": "pauseable",
                    "description": "Tickerが一時停止している間にブロードキャストされていたtickを含めるかどうかを示します。\ntrueの場合、Tickerが一時停止していない間に発生したtickイベントの数のみが返されます。\nfalseの場合、Tickerが一時停止している間に発生したtickイベントによる数も、戻り値に含まれます。\nデフォルト値はfalseです。",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "これまでにブロードキャストされたtickの数を返します。",
                "type": "Number"
            },
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 367,
            "itemtype": "method",
            "name": "_handleAF",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 380,
            "itemtype": "method",
            "name": "_handleTimeout",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 390,
            "itemtype": "method",
            "name": "_setupTick",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 407,
            "itemtype": "method",
            "name": "_tick",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/Ticker.js",
            "line": 444,
            "itemtype": "method",
            "name": "_getTime",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/UID.js",
            "line": 43,
            "itemtype": "property",
            "name": "_nextID",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "class": "UID",
            "module": "EaselJS"
        },
        {
            "file": "src/easeljs/utils/UID.js",
            "line": 50,
            "description": "次のユニークIDを返却します。",
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "次のユニークID",
                "type": "Number"
            },
            "static": 1,
            "class": "UID",
            "module": "EaselJS"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\n表示リストにおいて指定したインデックスの子を削除し、それらのparentをnullに設定します。\n\"removeChildAt(2, 7, ...);\"のようにして複数の子を削除することができます。\nすべての指定した子が削除された場合はtrueを返し、インデックス範囲外の子が一つでもあればfalseを返します。",
            "line": " src/easeljs/display/Container.js:212"
        },
        {
            "message": "Missing item type\nこのConainerのクローンを返します。\nこのインスタンスの現在のコンテキスト特有のいくつかのプロパティはデフォルト値となります（例えば.parentです）。",
            "line": " src/easeljs/display/Container.js:416"
        },
        {
            "message": "Missing item type\nproperty color",
            "line": " src/easeljs/display/Shadow.js:63"
        },
        {
            "message": "Missing item type\nproperty offsetX",
            "line": " src/easeljs/display/Shadow.js:70"
        },
        {
            "message": "Missing item type\nproperty offsetY",
            "line": " src/easeljs/display/Shadow.js:77"
        },
        {
            "message": "Missing item type\nproperty blur",
            "line": " src/easeljs/display/Shadow.js:84"
        },
        {
            "message": "Missing item type\nこのステージのクローンを返します。",
            "line": " src/easeljs/display/Stage.js:413"
        },
        {
            "message": "Missing item type",
            "line": " src/easeljs/filters/AlphaMapFilter.js:52"
        },
        {
            "message": "Missing item type\nこのオブジェクトの複製を返します。",
            "line": " src/easeljs/filters/AlphaMapFilter.js:109"
        },
        {
            "message": "Missing item type\nこのオブジェクトの文字列での表現を返します。",
            "line": " src/easeljs/filters/AlphaMapFilter.js:117"
        },
        {
            "message": "Missing item type",
            "line": " src/easeljs/filters/AlphaMaskFilter.js:54"
        },
        {
            "message": "Missing item type\nこのオブジェクトの複製を返します。",
            "line": " src/easeljs/filters/AlphaMaskFilter.js:101"
        },
        {
            "message": "Missing item type\nこのオブジェクトの文字列での表現を返します。",
            "line": " src/easeljs/filters/AlphaMaskFilter.js:109"
        },
        {
            "message": "Missing item type",
            "line": " src/easeljs/filters/BoxBlurFilter.js:51"
        },
        {
            "message": "Missing item type\nこのオブジェクトの複製を返します。",
            "line": " src/easeljs/filters/BoxBlurFilter.js:243"
        },
        {
            "message": "Missing item type\nこのオブジェクトの文字列での表現を返します。",
            "line": " src/easeljs/filters/BoxBlurFilter.js:251"
        },
        {
            "message": "Missing item type\n明度、コントラスト、彩度、色相を調整する便利メソッドです。\n同等の操作を行うには、adjustHue(hue), adjustContrast(contrast),\nadjustBrightness(brightness), adjustSaturation(saturation) を、この順に呼びます。",
            "line": " src/easeljs/filters/ColorMatrix.js:119"
        },
        {
            "message": "Missing item type\n赤、緑、青の各チャンネルに指定された値を加えて、ピクセル色の明度を調整します。\n正の値は画像を明るくします。負の値は暗くします。",
            "line": " src/easeljs/filters/ColorMatrix.js:136"
        },
        {
            "message": "Missing item type\nピクセル色のコントラストを調整します。\n正の値はコントラストを高くします。負の値は低くします。",
            "line": " src/easeljs/filters/ColorMatrix.js:155"
        },
        {
            "message": "Missing item type\nピクセル色の彩度を調整します。\n正の値は彩度を高くします。負の値は低くします（グレースケールに近づきます）。",
            "line": " src/easeljs/filters/ColorMatrix.js:186"
        },
        {
            "message": "Missing item type\nピクセル色の色相を調整します。",
            "line": " src/easeljs/filters/ColorMatrix.js:210"
        },
        {
            "message": "Missing item type\n指定された配列をこのインスタンスと連結（乗算）します。",
            "line": " src/easeljs/filters/ColorMatrix.js:233"
        },
        {
            "message": "Missing item type\nこの ColorMatrix の複製を返します。",
            "line": " src/easeljs/filters/ColorMatrix.js:245"
        },
        {
            "message": "Missing item type\nこの行列の値を含む長さ 25 (5x5) 配列のインスタンスを返します。",
            "line": " src/easeljs/filters/ColorMatrix.js:253"
        },
        {
            "message": "Missing item type\n指定された行列の値をこの行列にコピーします。",
            "line": " src/easeljs/filters/ColorMatrix.js:261"
        },
        {
            "message": "Missing item type\nButtonHelperはインタラクティブなボタンを{{#crossLink \"MovieClip\"}}{{/crossLink}}または{{#crossLink \"BitmapAnimation\"}}{{/crossLink}}インスタンスから\n生成するヘルパークラスです。本クラスはオブジェクトからのマウスイベントを傍受し、自動的に{{#crossLink \"BitmapAnimation/gotoAndStop\"}}{{/crossLink}}\nまたは{{#crossLink \"BitmapAnimation/gotoAndPlay\"}}{{/crossLink}}を呼び、それぞれのアニメーションラベル、ポインタカーソルを追加、そして\n当たり判定フレームをユーザが定義できるようにします。\n\nButtonHelperインスタンスはステージに追加する必要はありません。しかし、ガベージコレクションを防ぐために参照を保持しておくべきです。",
            "line": " src/easeljs/ui/ButtonHelper.js:34"
        }
    ]
}